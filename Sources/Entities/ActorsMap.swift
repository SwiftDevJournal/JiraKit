// Generated by Create API
// https://github.com/CreateAPI/CreateAPI

import Foundation
import NaiveDate

public struct ActorsMap: Codable {
    /// The user account ID of the user to add.
    public var user: [String]?
    /// The name of the group to add. This parameter cannot be used with the `groupId` parameter. As a group's name can change, use of `groupId` is recommended.
    public var group: [String]?
    /// The ID of the group to add. This parameter cannot be used with the `group` parameter.
    public var groupID: [String]?

    public init(user: [String]? = nil, group: [String]? = nil, groupID: [String]? = nil) {
        self.user = user
        self.group = group
        self.groupID = groupID
    }

    public init(from decoder: Decoder) throws {
        let values = try decoder.container(keyedBy: StringCodingKey.self)
        self.user = try values.decodeIfPresent([String].self, forKey: "user")
        self.group = try values.decodeIfPresent([String].self, forKey: "group")
        self.groupID = try values.decodeIfPresent([String].self, forKey: "groupId")
    }

    public func encode(to encoder: Encoder) throws {
        var values = encoder.container(keyedBy: StringCodingKey.self)
        try values.encodeIfPresent(user, forKey: "user")
        try values.encodeIfPresent(group, forKey: "group")
        try values.encodeIfPresent(groupID, forKey: "groupId")
    }
}
