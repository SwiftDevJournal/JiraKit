// Generated by Create API
// https://github.com/CreateAPI/CreateAPI

import Foundation
import NaiveDate

/// Details of an item associated with the changed record.
public struct AssociatedItemBean: Codable {
    /// The ID of the associated record.
    public var id: String?
    /// The name of the associated record.
    public var name: String?
    /// The type of the associated record.
    public var typeName: String?
    /// The ID of the associated parent record.
    public var parentID: String?
    /// The name of the associated parent record.
    public var parentName: String?

    public init(id: String? = nil, name: String? = nil, typeName: String? = nil, parentID: String? = nil, parentName: String? = nil) {
        self.id = id
        self.name = name
        self.typeName = typeName
        self.parentID = parentID
        self.parentName = parentName
    }

    public init(from decoder: Decoder) throws {
        let values = try decoder.container(keyedBy: StringCodingKey.self)
        self.id = try values.decodeIfPresent(String.self, forKey: "id")
        self.name = try values.decodeIfPresent(String.self, forKey: "name")
        self.typeName = try values.decodeIfPresent(String.self, forKey: "typeName")
        self.parentID = try values.decodeIfPresent(String.self, forKey: "parentId")
        self.parentName = try values.decodeIfPresent(String.self, forKey: "parentName")
    }

    public func encode(to encoder: Encoder) throws {
        var values = encoder.container(keyedBy: StringCodingKey.self)
        try values.encodeIfPresent(id, forKey: "id")
        try values.encodeIfPresent(name, forKey: "name")
        try values.encodeIfPresent(typeName, forKey: "typeName")
        try values.encodeIfPresent(parentID, forKey: "parentId")
        try values.encodeIfPresent(parentName, forKey: "parentName")
    }
}
