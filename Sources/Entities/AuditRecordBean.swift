// Generated by Create API
// https://github.com/CreateAPI/CreateAPI

import Foundation
import NaiveDate

/// An audit record.
public struct AuditRecordBean: Codable {
    /// The ID of the audit record.
    public var id: Int?
    /// The summary of the audit record.
    public var summary: String?
    /// The URL of the computer where the creation of the audit record was initiated.
    public var remoteAddress: String?
    /// Deprecated, use `authorAccountId` instead. The key of the user who created the audit record.
    public var authorKey: String?
    /// The date and time on which the audit record was created.
    public var created: Date?
    /// The category of the audit record. For a list of these categories, see the help article [Auditing in Jira applications](https://confluence.atlassian.com/x/noXKM).
    public var category: String?
    /// The event the audit record originated from.
    public var eventSource: String?
    /// The description of the audit record.
    public var description: String?
    /// Details of an item associated with the changed record.
    public var objectItem: AssociatedItemBean?
    /// The list of values changed in the record event.
    public var changedValues: [ChangedValueBean]?
    /// The list of items associated with the changed record.
    public var associatedItems: [AssociatedItemBean]?

    public init(id: Int? = nil, summary: String? = nil, remoteAddress: String? = nil, authorKey: String? = nil, created: Date? = nil, category: String? = nil, eventSource: String? = nil, description: String? = nil, objectItem: AssociatedItemBean? = nil, changedValues: [ChangedValueBean]? = nil, associatedItems: [AssociatedItemBean]? = nil) {
        self.id = id
        self.summary = summary
        self.remoteAddress = remoteAddress
        self.authorKey = authorKey
        self.created = created
        self.category = category
        self.eventSource = eventSource
        self.description = description
        self.objectItem = objectItem
        self.changedValues = changedValues
        self.associatedItems = associatedItems
    }

    public init(from decoder: Decoder) throws {
        let values = try decoder.container(keyedBy: StringCodingKey.self)
        self.id = try values.decodeIfPresent(Int.self, forKey: "id")
        self.summary = try values.decodeIfPresent(String.self, forKey: "summary")
        self.remoteAddress = try values.decodeIfPresent(String.self, forKey: "remoteAddress")
        self.authorKey = try values.decodeIfPresent(String.self, forKey: "authorKey")
        self.created = try values.decodeIfPresent(Date.self, forKey: "created")
        self.category = try values.decodeIfPresent(String.self, forKey: "category")
        self.eventSource = try values.decodeIfPresent(String.self, forKey: "eventSource")
        self.description = try values.decodeIfPresent(String.self, forKey: "description")
        self.objectItem = try values.decodeIfPresent(AssociatedItemBean.self, forKey: "objectItem")
        self.changedValues = try values.decodeIfPresent([ChangedValueBean].self, forKey: "changedValues")
        self.associatedItems = try values.decodeIfPresent([AssociatedItemBean].self, forKey: "associatedItems")
    }

    public func encode(to encoder: Encoder) throws {
        var values = encoder.container(keyedBy: StringCodingKey.self)
        try values.encodeIfPresent(id, forKey: "id")
        try values.encodeIfPresent(summary, forKey: "summary")
        try values.encodeIfPresent(remoteAddress, forKey: "remoteAddress")
        try values.encodeIfPresent(authorKey, forKey: "authorKey")
        try values.encodeIfPresent(created, forKey: "created")
        try values.encodeIfPresent(category, forKey: "category")
        try values.encodeIfPresent(eventSource, forKey: "eventSource")
        try values.encodeIfPresent(description, forKey: "description")
        try values.encodeIfPresent(objectItem, forKey: "objectItem")
        try values.encodeIfPresent(changedValues, forKey: "changedValues")
        try values.encodeIfPresent(associatedItems, forKey: "associatedItems")
    }
}
