// Generated by Create API
// https://github.com/CreateAPI/CreateAPI

import Foundation
import NaiveDate

/// Bulk issue property update request details.
public struct BulkIssuePropertyUpdateRequest: Codable {
    /// The value of the property. The value must be a [valid](https://tools.ietf.org/html/rfc4627), non-empty JSON blob. The maximum length is 32768 characters.
    public var value: AnyJSON?
    /// EXPERIMENTAL. The Jira expression to calculate the value of the property. The value of the expression must be an object that can be converted to JSON, such as a number, boolean, string, list, or map. The context variables available to the expression are `issue` and `user`. Issues for which the expression returns a value whose JSON representation is longer than 32768 characters are ignored.
    public var expression: String?
    /// The bulk operation filter.
    public var filter: IssueFilterForBulkPropertySet?

    public init(value: AnyJSON? = nil, expression: String? = nil, filter: IssueFilterForBulkPropertySet? = nil) {
        self.value = value
        self.expression = expression
        self.filter = filter
    }

    public init(from decoder: Decoder) throws {
        let values = try decoder.container(keyedBy: StringCodingKey.self)
        self.value = try values.decodeIfPresent(AnyJSON.self, forKey: "value")
        self.expression = try values.decodeIfPresent(String.self, forKey: "expression")
        self.filter = try values.decodeIfPresent(IssueFilterForBulkPropertySet.self, forKey: "filter")
    }

    public func encode(to encoder: Encoder) throws {
        var values = encoder.container(keyedBy: StringCodingKey.self)
        try values.encodeIfPresent(value, forKey: "value")
        try values.encodeIfPresent(expression, forKey: "expression")
        try values.encodeIfPresent(filter, forKey: "filter")
    }
}
