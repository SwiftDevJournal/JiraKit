// Generated by Create API
// https://github.com/CreateAPI/CreateAPI

import Foundation
import NaiveDate

/// Details of a changed worklog.
public struct ChangedWorklog: Codable {
    /// The ID of the worklog.
    public var worklogID: Int?
    /// The datetime of the change.
    public var updatedTime: Int?
    /// Details of properties associated with the change.
    public var properties: [EntityProperty]?

    public init(worklogID: Int? = nil, updatedTime: Int? = nil, properties: [EntityProperty]? = nil) {
        self.worklogID = worklogID
        self.updatedTime = updatedTime
        self.properties = properties
    }

    public init(from decoder: Decoder) throws {
        let values = try decoder.container(keyedBy: StringCodingKey.self)
        self.worklogID = try values.decodeIfPresent(Int.self, forKey: "worklogId")
        self.updatedTime = try values.decodeIfPresent(Int.self, forKey: "updatedTime")
        self.properties = try values.decodeIfPresent([EntityProperty].self, forKey: "properties")
    }

    public func encode(to encoder: Encoder) throws {
        var values = encoder.container(keyedBy: StringCodingKey.self)
        try values.encodeIfPresent(worklogID, forKey: "worklogId")
        try values.encodeIfPresent(updatedTime, forKey: "updatedTime")
        try values.encodeIfPresent(properties, forKey: "properties")
    }
}
