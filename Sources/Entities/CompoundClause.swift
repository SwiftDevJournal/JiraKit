// Generated by Create API
// https://github.com/CreateAPI/CreateAPI

import Foundation
import NaiveDate

/// A JQL query clause that consists of nested clauses. For example, `(labels in (urgent, blocker) OR lastCommentedBy = currentUser()). Note that, where nesting is not defined, the parser nests JQL clauses based on the operator precedence. For example, "A OR B AND C" is parsed as "(A OR B) AND C". See Setting the precedence of operators for more information about precedence in JQL queries.`
public struct CompoundClause: Codable {
    /// The list of nested clauses.
    public var clauses: [JqlQueryClause]
    /// The operator between the clauses.
    public var `operator`: Operator

    /// The operator between the clauses.
    public enum Operator: String, Codable, CaseIterable {
        case and
        case or
        case not
    }

    public init(clauses: [JqlQueryClause], `operator`: Operator) {
        self.clauses = clauses
        self.operator = `operator`
    }

    public init(from decoder: Decoder) throws {
        let values = try decoder.container(keyedBy: StringCodingKey.self)
        self.clauses = try values.decode([JqlQueryClause].self, forKey: "clauses")
        self.operator = try values.decode(Operator.self, forKey: "operator")
    }

    public func encode(to encoder: Encoder) throws {
        var values = encoder.container(keyedBy: StringCodingKey.self)
        try values.encode(clauses, forKey: "clauses")
        try values.encode(`operator`, forKey: "operator")
    }
}
