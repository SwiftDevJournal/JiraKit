// Generated by Create API
// https://github.com/CreateAPI/CreateAPI

import Foundation
import NaiveDate

/// Example:
///
/// {
///   "jiraEntityProperties" : [
///     {
///       "entityType" : "issue",
///       "key" : "dynamic-attachment-entity-property",
///       "keyConfigurations" : [
///         {
///           "extractions" : [
///             {
///               "alias" : "attachmentExtension",
///               "objectName" : "extension",
///               "type" : "text"
///             }
///           ],
///           "propertyKey" : "attachment"
///         }
///       ],
///       "name" : {
///         "value" : "Attachment Index Document"
///       }
///     }
///   ],
///   "jiraIssueFields" : [
///     {
///       "description" : {
///         "value" : "A dynamically added single-select field"
///       },
///       "extractions" : [
///         {
///           "name" : "categoryName",
///           "path" : "category",
///           "type" : "text"
///         }
///       ],
///       "key" : "dynamic-select-field",
///       "name" : {
///         "value" : "Dynamic single select"
///       },
///       "type" : "single_select"
///     }
///   ]
/// }
public struct ConnectModules: Codable {
    /// A list of app modules in the same format as the `modules` property in the
    /// [app descriptor](https://developer.atlassian.com/cloud/jira/platform/app-descriptor/).
    public var modules: [[String: AnyJSON]]

    public init(modules: [[String: AnyJSON]]) {
        self.modules = modules
    }

    public init(from decoder: Decoder) throws {
        let values = try decoder.container(keyedBy: StringCodingKey.self)
        self.modules = try values.decode([[String: AnyJSON]].self, forKey: "modules")
    }

    public func encode(to encoder: Encoder) throws {
        var values = encoder.container(keyedBy: StringCodingKey.self)
        try values.encode(modules, forKey: "modules")
    }
}
