// Generated by Create API
// https://github.com/CreateAPI/CreateAPI

import Foundation
import NaiveDate

/// The details of a custom field context.
public struct CustomFieldContext: Codable {
    /// The ID of the context.
    public var id: String
    /// The name of the context.
    public var name: String
    /// The description of the context.
    public var description: String
    /// Whether the context is global.
    public var isGlobalContext: Bool
    /// Whether the context apply to all issue types.
    public var isAnyIssueType: Bool

    public init(id: String, name: String, description: String, isGlobalContext: Bool, isAnyIssueType: Bool) {
        self.id = id
        self.name = name
        self.description = description
        self.isGlobalContext = isGlobalContext
        self.isAnyIssueType = isAnyIssueType
    }

    public init(from decoder: Decoder) throws {
        let values = try decoder.container(keyedBy: StringCodingKey.self)
        self.id = try values.decode(String.self, forKey: "id")
        self.name = try values.decode(String.self, forKey: "name")
        self.description = try values.decode(String.self, forKey: "description")
        self.isGlobalContext = try values.decode(Bool.self, forKey: "isGlobalContext")
        self.isAnyIssueType = try values.decode(Bool.self, forKey: "isAnyIssueType")
    }

    public func encode(to encoder: Encoder) throws {
        var values = encoder.container(keyedBy: StringCodingKey.self)
        try values.encode(id, forKey: "id")
        try values.encode(name, forKey: "name")
        try values.encode(description, forKey: "description")
        try values.encode(isGlobalContext, forKey: "isGlobalContext")
        try values.encode(isAnyIssueType, forKey: "isAnyIssueType")
    }
}
