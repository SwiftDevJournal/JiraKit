// Generated by Create API
// https://github.com/CreateAPI/CreateAPI

import Foundation
import NaiveDate

/// A clause that asserts whether a field was changed. For example, `status CHANGED AFTER startOfMonth(-1M)`.See [CHANGED](https://confluence.atlassian.com/x/dgiiLQ#Advancedsearching-operatorsreference-CHANGEDCHANGED) for more information about the CHANGED operator.
public struct FieldChangedClause: Codable {
    /// A field used in a JQL query. See [Advanced searching - fields reference](https://confluence.atlassian.com/x/dAiiLQ) for more information about fields in JQL queries.
    public var field: JqlQueryField
    /// The operator applied to the field.
    public var `operator`: Operator
    /// The list of time predicates.
    public var predicates: [JqlQueryClauseTimePredicate]

    /// The operator applied to the field.
    public enum Operator: String, Codable, CaseIterable {
        case changed
    }

    public init(field: JqlQueryField, `operator`: Operator, predicates: [JqlQueryClauseTimePredicate]) {
        self.field = field
        self.operator = `operator`
        self.predicates = predicates
    }

    public init(from decoder: Decoder) throws {
        let values = try decoder.container(keyedBy: StringCodingKey.self)
        self.field = try values.decode(JqlQueryField.self, forKey: "field")
        self.operator = try values.decode(Operator.self, forKey: "operator")
        self.predicates = try values.decode([JqlQueryClauseTimePredicate].self, forKey: "predicates")
    }

    public func encode(to encoder: Encoder) throws {
        var values = encoder.container(keyedBy: StringCodingKey.self)
        try values.encode(field, forKey: "field")
        try values.encode(`operator`, forKey: "operator")
        try values.encode(predicates, forKey: "predicates")
    }
}
