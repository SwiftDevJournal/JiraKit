// Generated by Create API
// https://github.com/CreateAPI/CreateAPI

import Foundation
import NaiveDate

/// A clause that asserts the current value of a field. For example, `summary ~ test`.
public struct FieldValueClause: Codable {
    /// A field used in a JQL query. See [Advanced searching - fields reference](https://confluence.atlassian.com/x/dAiiLQ) for more information about fields in JQL queries.
    public var field: JqlQueryField
    /// The operator between the field and operand.
    public var `operator`: Operator
    /// Details of an operand in a JQL clause.
    public var operand: JqlQueryClauseOperand

    /// The operator between the field and operand.
    public enum Operator: String, Codable, CaseIterable {
        case equal = "="
        case notEqual = "!="
        case greaterThan = ">"
        case lessThan = "<"
        case greaterThanOrEqualTo = ">="
        case lessThanOrEqualTo = "<="
        case `in`
        case notIn = "not in"
        case tilda = "~"
        case tildaEqual = "~="
        case `is`
        case isNot = "is not"
    }

    public init(field: JqlQueryField, `operator`: Operator, operand: JqlQueryClauseOperand) {
        self.field = field
        self.operator = `operator`
        self.operand = operand
    }

    public init(from decoder: Decoder) throws {
        let values = try decoder.container(keyedBy: StringCodingKey.self)
        self.field = try values.decode(JqlQueryField.self, forKey: "field")
        self.operator = try values.decode(Operator.self, forKey: "operator")
        self.operand = try values.decode(JqlQueryClauseOperand.self, forKey: "operand")
    }

    public func encode(to encoder: Encoder) throws {
        var values = encoder.container(keyedBy: StringCodingKey.self)
        try values.encode(field, forKey: "field")
        try values.encode(`operator`, forKey: "operator")
        try values.encode(operand, forKey: "operand")
    }
}
