// Generated by Create API
// https://github.com/CreateAPI/CreateAPI

import Foundation
import NaiveDate

/// A group label.
public struct GroupLabel: Codable {
    /// The group label name.
    public var text: String?
    /// The title of the group label.
    public var title: String?
    /// The type of the group label.
    public var type: `Type`?

    /// The type of the group label.
    public enum `Type`: String, Codable, CaseIterable {
        case admin = "ADMIN"
        case single = "SINGLE"
        case multiple = "MULTIPLE"
    }

    public init(text: String? = nil, title: String? = nil, type: `Type`? = nil) {
        self.text = text
        self.title = title
        self.type = type
    }

    public init(from decoder: Decoder) throws {
        let values = try decoder.container(keyedBy: StringCodingKey.self)
        self.text = try values.decodeIfPresent(String.self, forKey: "text")
        self.title = try values.decodeIfPresent(String.self, forKey: "title")
        self.type = try values.decodeIfPresent(`Type`.self, forKey: "type")
    }

    public func encode(to encoder: Encoder) throws {
        var values = encoder.container(keyedBy: StringCodingKey.self)
        try values.encodeIfPresent(text, forKey: "text")
        try values.encodeIfPresent(title, forKey: "title")
        try values.encodeIfPresent(type, forKey: "type")
    }
}
