// Generated by Create API
// https://github.com/CreateAPI/CreateAPI

import Foundation
import NaiveDate

public struct IncludedFields: Codable {
    public var included: [String]?
    public var actuallyIncluded: [String]?
    public var excluded: [String]?

    public init(included: [String]? = nil, actuallyIncluded: [String]? = nil, excluded: [String]? = nil) {
        self.included = included
        self.actuallyIncluded = actuallyIncluded
        self.excluded = excluded
    }

    public init(from decoder: Decoder) throws {
        let values = try decoder.container(keyedBy: StringCodingKey.self)
        self.included = try values.decodeIfPresent([String].self, forKey: "included")
        self.actuallyIncluded = try values.decodeIfPresent([String].self, forKey: "actuallyIncluded")
        self.excluded = try values.decodeIfPresent([String].self, forKey: "excluded")
    }

    public func encode(to encoder: Encoder) throws {
        var values = encoder.container(keyedBy: StringCodingKey.self)
        try values.encodeIfPresent(included, forKey: "included")
        try values.encodeIfPresent(actuallyIncluded, forKey: "actuallyIncluded")
        try values.encodeIfPresent(excluded, forKey: "excluded")
    }
}
