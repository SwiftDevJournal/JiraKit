// Generated by Create API
// https://github.com/CreateAPI/CreateAPI

import Foundation
import NaiveDate

/// Associated issue type screen scheme and project.
public struct IssueTypeScreenSchemeProjectAssociation: Codable {
    /// The ID of the issue type screen scheme.
    public var issueTypeScreenSchemeID: String?
    /// The ID of the project.
    public var projectID: String?

    public init(issueTypeScreenSchemeID: String? = nil, projectID: String? = nil) {
        self.issueTypeScreenSchemeID = issueTypeScreenSchemeID
        self.projectID = projectID
    }

    public init(from decoder: Decoder) throws {
        let values = try decoder.container(keyedBy: StringCodingKey.self)
        self.issueTypeScreenSchemeID = try values.decodeIfPresent(String.self, forKey: "issueTypeScreenSchemeId")
        self.projectID = try values.decodeIfPresent(String.self, forKey: "projectId")
    }

    public func encode(to encoder: Encoder) throws {
        var values = encoder.container(keyedBy: StringCodingKey.self)
        try values.encodeIfPresent(issueTypeScreenSchemeID, forKey: "issueTypeScreenSchemeId")
        try values.encodeIfPresent(projectID, forKey: "projectId")
    }
}
