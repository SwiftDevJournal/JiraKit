// Generated by Create API
// https://github.com/CreateAPI/CreateAPI

import Foundation
import NaiveDate

/// Status details for an issue type.
public struct IssueTypeWithStatus: Codable {
    /// The URL of the issue type's status details.
    public var this: String
    /// The ID of the issue type.
    public var id: String
    /// The name of the issue type.
    public var name: String
    /// Whether this issue type represents subtasks.
    public var isSubtask: Bool
    /// List of status details for the issue type.
    public var statuses: [StatusDetails]

    public init(this: String, id: String, name: String, isSubtask: Bool, statuses: [StatusDetails]) {
        self.this = this
        self.id = id
        self.name = name
        self.isSubtask = isSubtask
        self.statuses = statuses
    }

    public init(from decoder: Decoder) throws {
        let values = try decoder.container(keyedBy: StringCodingKey.self)
        self.this = try values.decode(String.self, forKey: "self")
        self.id = try values.decode(String.self, forKey: "id")
        self.name = try values.decode(String.self, forKey: "name")
        self.isSubtask = try values.decode(Bool.self, forKey: "subtask")
        self.statuses = try values.decode([StatusDetails].self, forKey: "statuses")
    }

    public func encode(to encoder: Encoder) throws {
        var values = encoder.container(keyedBy: StringCodingKey.self)
        try values.encode(this, forKey: "self")
        try values.encode(id, forKey: "id")
        try values.encode(name, forKey: "name")
        try values.encode(isSubtask, forKey: "subtask")
        try values.encode(statuses, forKey: "statuses")
    }
}
