// Generated by Create API
// https://github.com/CreateAPI/CreateAPI

import Foundation
import NaiveDate

/// Details about the mapping between an issue type and a workflow.
public struct IssueTypeWorkflowMapping: Codable {
    /// The ID of the issue type. Not required if updating the issue type-workflow mapping.
    public var issueType: String?
    /// The name of the workflow.
    public var workflow: String?
    /// Set to true to create or update the draft of a workflow scheme and update the mapping in the draft, when the workflow scheme cannot be edited. Defaults to `false`. Only applicable when updating the workflow-issue types mapping.
    public var isUpdateDraftIfNeeded: Bool?

    public init(issueType: String? = nil, workflow: String? = nil, isUpdateDraftIfNeeded: Bool? = nil) {
        self.issueType = issueType
        self.workflow = workflow
        self.isUpdateDraftIfNeeded = isUpdateDraftIfNeeded
    }

    public init(from decoder: Decoder) throws {
        let values = try decoder.container(keyedBy: StringCodingKey.self)
        self.issueType = try values.decodeIfPresent(String.self, forKey: "issueType")
        self.workflow = try values.decodeIfPresent(String.self, forKey: "workflow")
        self.isUpdateDraftIfNeeded = try values.decodeIfPresent(Bool.self, forKey: "updateDraftIfNeeded")
    }

    public func encode(to encoder: Encoder) throws {
        var values = encoder.container(keyedBy: StringCodingKey.self)
        try values.encodeIfPresent(issueType, forKey: "issueType")
        try values.encodeIfPresent(workflow, forKey: "workflow")
        try values.encodeIfPresent(isUpdateDraftIfNeeded, forKey: "updateDraftIfNeeded")
    }
}
