// Generated by Create API
// https://github.com/CreateAPI/CreateAPI

import Foundation
import NaiveDate

public struct JiraExpressionEvalRequestBean: Codable {
    /// The Jira expression to evaluate.
    ///
    /// Example: "{ key: issue.key, type: issue.issueType.name, links: issue.links.map(link => link.linkedIssue.id) }"
    public var expression: String
    /// The context in which the Jira expression is evaluated.
    public var context: JiraExpressionEvalContextBean?

    public init(expression: String, context: JiraExpressionEvalContextBean? = nil) {
        self.expression = expression
        self.context = context
    }

    public init(from decoder: Decoder) throws {
        let values = try decoder.container(keyedBy: StringCodingKey.self)
        self.expression = try values.decode(String.self, forKey: "expression")
        self.context = try values.decodeIfPresent(JiraExpressionEvalContextBean.self, forKey: "context")
    }

    public func encode(to encoder: Encoder) throws {
        var values = encoder.container(keyedBy: StringCodingKey.self)
        try values.encode(expression, forKey: "expression")
        try values.encodeIfPresent(context, forKey: "context")
    }
}
