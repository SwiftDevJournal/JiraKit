// Generated by Create API
// https://github.com/CreateAPI/CreateAPI

import Foundation
import NaiveDate

/// The ID or key of a linked issue.
public struct LinkedIssue: Codable {
    /// The ID of an issue. Required if `key` isn't provided.
    public var id: String?
    /// The key of an issue. Required if `id` isn't provided.
    public var key: String?
    /// The URL of the issue.
    public var this: URL?
    /// The fields associated with the issue.
    public var fields: Fields?

    public init(id: String? = nil, key: String? = nil, this: URL? = nil, fields: Fields? = nil) {
        self.id = id
        self.key = key
        self.this = this
        self.fields = fields
    }

    public init(from decoder: Decoder) throws {
        let values = try decoder.container(keyedBy: StringCodingKey.self)
        self.id = try values.decodeIfPresent(String.self, forKey: "id")
        self.key = try values.decodeIfPresent(String.self, forKey: "key")
        self.this = try values.decodeIfPresent(URL.self, forKey: "self")
        self.fields = try values.decodeIfPresent(Fields.self, forKey: "fields")
    }

    public func encode(to encoder: Encoder) throws {
        var values = encoder.container(keyedBy: StringCodingKey.self)
        try values.encodeIfPresent(id, forKey: "id")
        try values.encodeIfPresent(key, forKey: "key")
        try values.encodeIfPresent(this, forKey: "self")
        try values.encodeIfPresent(fields, forKey: "fields")
    }
}
