// Generated by Create API
// https://github.com/CreateAPI/CreateAPI

import Foundation
import NaiveDate

/// A page containing dashboard details.
public struct PageOfDashboards: Codable {
    /// The index of the first item returned on the page.
    public var startAt: Int?
    /// The maximum number of results that could be on the page.
    public var maxResults: Int?
    /// The number of results on the page.
    public var total: Int?
    /// The URL of the previous page of results, if any.
    public var prev: String?
    /// The URL of the next page of results, if any.
    public var next: String?
    /// List of dashboards.
    public var dashboards: [Dashboard]?

    public init(startAt: Int? = nil, maxResults: Int? = nil, total: Int? = nil, prev: String? = nil, next: String? = nil, dashboards: [Dashboard]? = nil) {
        self.startAt = startAt
        self.maxResults = maxResults
        self.total = total
        self.prev = prev
        self.next = next
        self.dashboards = dashboards
    }

    public init(from decoder: Decoder) throws {
        let values = try decoder.container(keyedBy: StringCodingKey.self)
        self.startAt = try values.decodeIfPresent(Int.self, forKey: "startAt")
        self.maxResults = try values.decodeIfPresent(Int.self, forKey: "maxResults")
        self.total = try values.decodeIfPresent(Int.self, forKey: "total")
        self.prev = try values.decodeIfPresent(String.self, forKey: "prev")
        self.next = try values.decodeIfPresent(String.self, forKey: "next")
        self.dashboards = try values.decodeIfPresent([Dashboard].self, forKey: "dashboards")
    }

    public func encode(to encoder: Encoder) throws {
        var values = encoder.container(keyedBy: StringCodingKey.self)
        try values.encodeIfPresent(startAt, forKey: "startAt")
        try values.encodeIfPresent(maxResults, forKey: "maxResults")
        try values.encodeIfPresent(total, forKey: "total")
        try values.encodeIfPresent(prev, forKey: "prev")
        try values.encodeIfPresent(next, forKey: "next")
        try values.encodeIfPresent(dashboards, forKey: "dashboards")
    }
}
