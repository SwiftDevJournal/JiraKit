// Generated by Create API
// https://github.com/CreateAPI/CreateAPI

import Foundation
import NaiveDate

/// Paginated list of worklog details
public struct PageOfWorklogs: Codable {
    /// The index of the first item returned on the page.
    public var startAt: Int?
    /// The maximum number of results that could be on the page.
    public var maxResults: Int?
    /// The number of results on the page.
    public var total: Int?
    /// List of worklogs.
    public var worklogs: [Worklog]?

    public init(startAt: Int? = nil, maxResults: Int? = nil, total: Int? = nil, worklogs: [Worklog]? = nil) {
        self.startAt = startAt
        self.maxResults = maxResults
        self.total = total
        self.worklogs = worklogs
    }

    public init(from decoder: Decoder) throws {
        let values = try decoder.container(keyedBy: StringCodingKey.self)
        self.startAt = try values.decodeIfPresent(Int.self, forKey: "startAt")
        self.maxResults = try values.decodeIfPresent(Int.self, forKey: "maxResults")
        self.total = try values.decodeIfPresent(Int.self, forKey: "total")
        self.worklogs = try values.decodeIfPresent([Worklog].self, forKey: "worklogs")
    }

    public func encode(to encoder: Encoder) throws {
        var values = encoder.container(keyedBy: StringCodingKey.self)
        try values.encodeIfPresent(startAt, forKey: "startAt")
        try values.encodeIfPresent(maxResults, forKey: "maxResults")
        try values.encodeIfPresent(total, forKey: "total")
        try values.encodeIfPresent(worklogs, forKey: "worklogs")
    }
}
