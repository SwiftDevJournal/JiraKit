// Generated by Create API
// https://github.com/CreateAPI/CreateAPI

import Foundation
import NaiveDate

public struct PaginatedResponseComment: Codable {
    public var total: Int?
    public var results: [Comment]?
    public var maxResults: Int?
    public var startAt: Int?

    public init(total: Int? = nil, results: [Comment]? = nil, maxResults: Int? = nil, startAt: Int? = nil) {
        self.total = total
        self.results = results
        self.maxResults = maxResults
        self.startAt = startAt
    }

    public init(from decoder: Decoder) throws {
        let values = try decoder.container(keyedBy: StringCodingKey.self)
        self.total = try values.decodeIfPresent(Int.self, forKey: "total")
        self.results = try values.decodeIfPresent([Comment].self, forKey: "results")
        self.maxResults = try values.decodeIfPresent(Int.self, forKey: "maxResults")
        self.startAt = try values.decodeIfPresent(Int.self, forKey: "startAt")
    }

    public func encode(to encoder: Encoder) throws {
        var values = encoder.container(keyedBy: StringCodingKey.self)
        try values.encodeIfPresent(total, forKey: "total")
        try values.encodeIfPresent(results, forKey: "results")
        try values.encodeIfPresent(maxResults, forKey: "maxResults")
        try values.encodeIfPresent(startAt, forKey: "startAt")
    }
}
