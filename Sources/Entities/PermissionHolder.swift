// Generated by Create API
// https://github.com/CreateAPI/CreateAPI

import Foundation
import NaiveDate

/// Details of a user, group, field, or project role that holds a permission. See [Holder object](../api-group-permission-schemes/#holder-object) in *Get all permission schemes* for more information.
public struct PermissionHolder: Codable {
    /// The type of permission holder.
    public var type: String
    /// As a group's name can change, use of `value` is recommended. The identifier associated withthe `type` value that defines the holder of the permission.
    public var parameter: String?
    /// The identifier associated with the `type` value that defines the holder of the permission.
    public var value: String?
    /// Expand options that include additional permission holder details in the response.
    public var expand: String?

    public init(type: String, parameter: String? = nil, value: String? = nil, expand: String? = nil) {
        self.type = type
        self.parameter = parameter
        self.value = value
        self.expand = expand
    }

    public init(from decoder: Decoder) throws {
        let values = try decoder.container(keyedBy: StringCodingKey.self)
        self.type = try values.decode(String.self, forKey: "type")
        self.parameter = try values.decodeIfPresent(String.self, forKey: "parameter")
        self.value = try values.decodeIfPresent(String.self, forKey: "value")
        self.expand = try values.decodeIfPresent(String.self, forKey: "expand")
    }

    public func encode(to encoder: Encoder) throws {
        var values = encoder.container(keyedBy: StringCodingKey.self)
        try values.encode(type, forKey: "type")
        try values.encodeIfPresent(parameter, forKey: "parameter")
        try values.encodeIfPresent(value, forKey: "value")
        try values.encodeIfPresent(expand, forKey: "expand")
    }
}
