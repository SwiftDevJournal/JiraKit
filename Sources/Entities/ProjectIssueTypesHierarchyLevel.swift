// Generated by Create API
// https://github.com/CreateAPI/CreateAPI

import Foundation
import NaiveDate

/// Details of an issue type hierarchy level.
public struct ProjectIssueTypesHierarchyLevel: Codable {
    /// The ID of the issue type hierarchy level. This property is deprecated, see [Change notice: Removing hierarchy level IDs from next-gen APIs](https://developer.atlassian.com/cloud/jira/platform/change-notice-removing-hierarchy-level-ids-from-next-gen-apis/).
    public var entityID: UUID?
    /// The level of the issue type hierarchy level.
    public var level: Int?
    /// The name of the issue type hierarchy level.
    public var name: String?
    /// The list of issue types in the hierarchy level.
    public var issueTypes: [IssueTypeInfo]?

    public init(entityID: UUID? = nil, level: Int? = nil, name: String? = nil, issueTypes: [IssueTypeInfo]? = nil) {
        self.entityID = entityID
        self.level = level
        self.name = name
        self.issueTypes = issueTypes
    }

    public init(from decoder: Decoder) throws {
        let values = try decoder.container(keyedBy: StringCodingKey.self)
        self.entityID = try values.decodeIfPresent(UUID.self, forKey: "entityId")
        self.level = try values.decodeIfPresent(Int.self, forKey: "level")
        self.name = try values.decodeIfPresent(String.self, forKey: "name")
        self.issueTypes = try values.decodeIfPresent([IssueTypeInfo].self, forKey: "issueTypes")
    }

    public func encode(to encoder: Encoder) throws {
        var values = encoder.container(keyedBy: StringCodingKey.self)
        try values.encodeIfPresent(entityID, forKey: "entityId")
        try values.encodeIfPresent(level, forKey: "level")
        try values.encodeIfPresent(name, forKey: "name")
        try values.encodeIfPresent(issueTypes, forKey: "issueTypes")
    }
}
