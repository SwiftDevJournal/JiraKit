// Generated by Create API
// https://github.com/CreateAPI/CreateAPI

import Foundation
import NaiveDate

public struct RemoveOptionFromIssuesResult: Codable {
    /// The IDs of the modified issues.
    public var modifiedIssues: [Int]?
    /// The IDs of the unchanged issues, those issues where errors prevent modification.
    public var unmodifiedIssues: [Int]?
    /// A collection of errors related to unchanged issues. The collection size is limited, which means not all errors may be returned.
    public var errors: SimpleErrorCollection?

    public init(modifiedIssues: [Int]? = nil, unmodifiedIssues: [Int]? = nil, errors: SimpleErrorCollection? = nil) {
        self.modifiedIssues = modifiedIssues
        self.unmodifiedIssues = unmodifiedIssues
        self.errors = errors
    }

    public init(from decoder: Decoder) throws {
        let values = try decoder.container(keyedBy: StringCodingKey.self)
        self.modifiedIssues = try values.decodeIfPresent([Int].self, forKey: "modifiedIssues")
        self.unmodifiedIssues = try values.decodeIfPresent([Int].self, forKey: "unmodifiedIssues")
        self.errors = try values.decodeIfPresent(SimpleErrorCollection.self, forKey: "errors")
    }

    public func encode(to encoder: Encoder) throws {
        var values = encoder.container(keyedBy: StringCodingKey.self)
        try values.encodeIfPresent(modifiedIssues, forKey: "modifiedIssues")
        try values.encodeIfPresent(unmodifiedIssues, forKey: "unmodifiedIssues")
        try values.encodeIfPresent(errors, forKey: "errors")
    }
}
