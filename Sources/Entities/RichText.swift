// Generated by Create API
// https://github.com/CreateAPI/CreateAPI

import Foundation
import NaiveDate

public struct RichText: Codable {
    public var isFinalised: Bool?
    public var isValueSet: Bool?
    public var isEmptyAdf: Bool?
    public var isEmpty: Bool?

    public init(isFinalised: Bool? = nil, isValueSet: Bool? = nil, isEmptyAdf: Bool? = nil, isEmpty: Bool? = nil) {
        self.isFinalised = isFinalised
        self.isValueSet = isValueSet
        self.isEmptyAdf = isEmptyAdf
        self.isEmpty = isEmpty
    }

    public init(from decoder: Decoder) throws {
        let values = try decoder.container(keyedBy: StringCodingKey.self)
        self.isFinalised = try values.decodeIfPresent(Bool.self, forKey: "finalised")
        self.isValueSet = try values.decodeIfPresent(Bool.self, forKey: "valueSet")
        self.isEmptyAdf = try values.decodeIfPresent(Bool.self, forKey: "emptyAdf")
        self.isEmpty = try values.decodeIfPresent(Bool.self, forKey: "empty")
    }

    public func encode(to encoder: Encoder) throws {
        var values = encoder.container(keyedBy: StringCodingKey.self)
        try values.encodeIfPresent(isFinalised, forKey: "finalised")
        try values.encodeIfPresent(isValueSet, forKey: "valueSet")
        try values.encodeIfPresent(isEmptyAdf, forKey: "emptyAdf")
        try values.encodeIfPresent(isEmpty, forKey: "empty")
    }
}
