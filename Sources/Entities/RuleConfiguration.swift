// Generated by Create API
// https://github.com/CreateAPI/CreateAPI

import Foundation
import NaiveDate

/// A rule configuration.
public struct RuleConfiguration: Codable {
    /// Configuration of the rule, as it is stored by the Connect app on the rule configuration page.
    public var value: String
    /// EXPERIMENTAL: Whether the rule is disabled.
    public var isDisabled: Bool
    /// EXPERIMENTAL: A tag used to filter rules in [Get workflow transition rule configurations](https://developer.atlassian.com/cloud/jira/platform/rest/v3/api-group-workflow-transition-rules/#api-rest-api-3-workflow-rule-config-get).
    public var tag: String?

    public init(value: String, isDisabled: Bool? = nil, tag: String? = nil) {
        self.value = value
        self.isDisabled = isDisabled ?? false
        self.tag = tag
    }

    public init(from decoder: Decoder) throws {
        let values = try decoder.container(keyedBy: StringCodingKey.self)
        self.value = try values.decode(String.self, forKey: "value")
        self.isDisabled = try values.decodeIfPresent(Bool.self, forKey: "disabled") ?? false
        self.tag = try values.decodeIfPresent(String.self, forKey: "tag")
    }

    public func encode(to encoder: Encoder) throws {
        var values = encoder.container(keyedBy: StringCodingKey.self)
        try values.encode(value, forKey: "value")
        try values.encodeIfPresent(isDisabled, forKey: "disabled")
        try values.encodeIfPresent(tag, forKey: "tag")
    }
}
