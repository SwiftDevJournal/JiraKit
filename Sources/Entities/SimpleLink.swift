// Generated by Create API
// https://github.com/CreateAPI/CreateAPI

import Foundation
import NaiveDate

/// Details about the operations available in this version.
public struct SimpleLink: Codable {
    public var id: String?
    public var styleClass: String?
    public var iconClass: String?
    public var label: String?
    public var title: String?
    public var href: String?
    public var weight: Int?

    public init(id: String? = nil, styleClass: String? = nil, iconClass: String? = nil, label: String? = nil, title: String? = nil, href: String? = nil, weight: Int? = nil) {
        self.id = id
        self.styleClass = styleClass
        self.iconClass = iconClass
        self.label = label
        self.title = title
        self.href = href
        self.weight = weight
    }

    public init(from decoder: Decoder) throws {
        let values = try decoder.container(keyedBy: StringCodingKey.self)
        self.id = try values.decodeIfPresent(String.self, forKey: "id")
        self.styleClass = try values.decodeIfPresent(String.self, forKey: "styleClass")
        self.iconClass = try values.decodeIfPresent(String.self, forKey: "iconClass")
        self.label = try values.decodeIfPresent(String.self, forKey: "label")
        self.title = try values.decodeIfPresent(String.self, forKey: "title")
        self.href = try values.decodeIfPresent(String.self, forKey: "href")
        self.weight = try values.decodeIfPresent(Int.self, forKey: "weight")
    }

    public func encode(to encoder: Encoder) throws {
        var values = encoder.container(keyedBy: StringCodingKey.self)
        try values.encodeIfPresent(id, forKey: "id")
        try values.encodeIfPresent(styleClass, forKey: "styleClass")
        try values.encodeIfPresent(iconClass, forKey: "iconClass")
        try values.encodeIfPresent(label, forKey: "label")
        try values.encodeIfPresent(title, forKey: "title")
        try values.encodeIfPresent(href, forKey: "href")
        try values.encodeIfPresent(weight, forKey: "weight")
    }
}
