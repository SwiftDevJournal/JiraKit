// Generated by Create API
// https://github.com/CreateAPI/CreateAPI

import Foundation
import NaiveDate

public struct SimpleListWrapperGroupName: Codable {
    public var size: Int?
    public var items: [GroupName]?
    public var maxResults: Int?

    public init(size: Int? = nil, items: [GroupName]? = nil, maxResults: Int? = nil) {
        self.size = size
        self.items = items
        self.maxResults = maxResults
    }

    public init(from decoder: Decoder) throws {
        let values = try decoder.container(keyedBy: StringCodingKey.self)
        self.size = try values.decodeIfPresent(Int.self, forKey: "size")
        self.items = try values.decodeIfPresent([GroupName].self, forKey: "items")
        self.maxResults = try values.decodeIfPresent(Int.self, forKey: "max-results")
    }

    public func encode(to encoder: Encoder) throws {
        var values = encoder.container(keyedBy: StringCodingKey.self)
        try values.encodeIfPresent(size, forKey: "size")
        try values.encodeIfPresent(items, forKey: "items")
        try values.encodeIfPresent(maxResults, forKey: "max-results")
    }
}
