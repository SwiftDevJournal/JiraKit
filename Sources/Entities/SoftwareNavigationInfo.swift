// Generated by Create API
// https://github.com/CreateAPI/CreateAPI

import Foundation
import NaiveDate

public struct SoftwareNavigationInfo: Codable {
    public var boardID: Int64?
    public var boardName: String?
    public var isSimpleBoard: Bool?

    public init(boardID: Int64? = nil, boardName: String? = nil, isSimpleBoard: Bool? = nil) {
        self.boardID = boardID
        self.boardName = boardName
        self.isSimpleBoard = isSimpleBoard
    }

    public init(from decoder: Decoder) throws {
        let values = try decoder.container(keyedBy: StringCodingKey.self)
        self.boardID = try values.decodeIfPresent(Int64.self, forKey: "boardId")
        self.boardName = try values.decodeIfPresent(String.self, forKey: "boardName")
        self.isSimpleBoard = try values.decodeIfPresent(Bool.self, forKey: "simpleBoard")
    }

    public func encode(to encoder: Encoder) throws {
        var values = encoder.container(keyedBy: StringCodingKey.self)
        try values.encodeIfPresent(boardID, forKey: "boardId")
        try values.encodeIfPresent(boardName, forKey: "boardName")
        try values.encodeIfPresent(isSimpleBoard, forKey: "simpleBoard")
    }
}
