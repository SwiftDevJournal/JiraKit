// Generated by Create API
// https://github.com/CreateAPI/CreateAPI

import Foundation
import NaiveDate

/// The scope of the status.
public struct StatusScope: Codable {
    /// The scope of the status. `GLOBAL` for company-managed projects and `PROJECT` for team-managed projects.
    public var type: `Type`
    /// Project ID details.
    public var project: ProjectID?

    /// The scope of the status. `GLOBAL` for company-managed projects and `PROJECT` for team-managed projects.
    public enum `Type`: String, Codable, CaseIterable {
        case project = "PROJECT"
        case global = "GLOBAL"
    }

    public init(type: `Type`, project: ProjectID? = nil) {
        self.type = type
        self.project = project
    }

    public init(from decoder: Decoder) throws {
        let values = try decoder.container(keyedBy: StringCodingKey.self)
        self.type = try values.decode(`Type`.self, forKey: "type")
        self.project = try values.decodeIfPresent(ProjectID.self, forKey: "project")
    }

    public func encode(to encoder: Encoder) throws {
        var values = encoder.container(keyedBy: StringCodingKey.self)
        try values.encode(type, forKey: "type")
        try values.encodeIfPresent(project, forKey: "project")
    }
}
