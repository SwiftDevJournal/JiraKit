// Generated by Create API
// https://github.com/CreateAPI/CreateAPI

import Foundation
import NaiveDate

/// Details of the status being updated.
public struct StatusUpdate: Codable {
    /// The ID of the status.
    public var id: String
    /// The name of the status.
    public var name: String
    /// The category of the status.
    public var statusCategory: StatusCategory
    /// The description of the status.
    public var description: String?

    /// The category of the status.
    public enum StatusCategory: String, Codable, CaseIterable {
        case todo = "TODO"
        case inProgress = "IN_PROGRESS"
        case done = "DONE"
    }

    public init(id: String, name: String, statusCategory: StatusCategory, description: String? = nil) {
        self.id = id
        self.name = name
        self.statusCategory = statusCategory
        self.description = description
    }

    public init(from decoder: Decoder) throws {
        let values = try decoder.container(keyedBy: StringCodingKey.self)
        self.id = try values.decode(String.self, forKey: "id")
        self.name = try values.decode(String.self, forKey: "name")
        self.statusCategory = try values.decode(StatusCategory.self, forKey: "statusCategory")
        self.description = try values.decodeIfPresent(String.self, forKey: "description")
    }

    public func encode(to encoder: Encoder) throws {
        var values = encoder.container(keyedBy: StringCodingKey.self)
        try values.encode(id, forKey: "id")
        try values.encode(name, forKey: "name")
        try values.encode(statusCategory, forKey: "statusCategory")
        try values.encodeIfPresent(description, forKey: "description")
    }
}
