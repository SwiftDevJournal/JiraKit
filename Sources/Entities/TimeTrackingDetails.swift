// Generated by Create API
// https://github.com/CreateAPI/CreateAPI

import Foundation
import NaiveDate

/// Time tracking details.
public struct TimeTrackingDetails: Codable {
    /// The original estimate of time needed for this issue in readable format.
    public var originalEstimate: String?
    /// The remaining estimate of time needed for this issue in readable format.
    public var remainingEstimate: String?
    /// Time worked on this issue in readable format.
    public var timeSpent: String?
    /// The original estimate of time needed for this issue in seconds.
    public var originalEstimateSeconds: Int64?
    /// The remaining estimate of time needed for this issue in seconds.
    public var remainingEstimateSeconds: Int64?
    /// Time worked on this issue in seconds.
    public var timeSpentSeconds: Int64?

    public init(originalEstimate: String? = nil, remainingEstimate: String? = nil, timeSpent: String? = nil, originalEstimateSeconds: Int64? = nil, remainingEstimateSeconds: Int64? = nil, timeSpentSeconds: Int64? = nil) {
        self.originalEstimate = originalEstimate
        self.remainingEstimate = remainingEstimate
        self.timeSpent = timeSpent
        self.originalEstimateSeconds = originalEstimateSeconds
        self.remainingEstimateSeconds = remainingEstimateSeconds
        self.timeSpentSeconds = timeSpentSeconds
    }

    public init(from decoder: Decoder) throws {
        let values = try decoder.container(keyedBy: StringCodingKey.self)
        self.originalEstimate = try values.decodeIfPresent(String.self, forKey: "originalEstimate")
        self.remainingEstimate = try values.decodeIfPresent(String.self, forKey: "remainingEstimate")
        self.timeSpent = try values.decodeIfPresent(String.self, forKey: "timeSpent")
        self.originalEstimateSeconds = try values.decodeIfPresent(Int64.self, forKey: "originalEstimateSeconds")
        self.remainingEstimateSeconds = try values.decodeIfPresent(Int64.self, forKey: "remainingEstimateSeconds")
        self.timeSpentSeconds = try values.decodeIfPresent(Int64.self, forKey: "timeSpentSeconds")
    }

    public func encode(to encoder: Encoder) throws {
        var values = encoder.container(keyedBy: StringCodingKey.self)
        try values.encodeIfPresent(originalEstimate, forKey: "originalEstimate")
        try values.encodeIfPresent(remainingEstimate, forKey: "remainingEstimate")
        try values.encodeIfPresent(timeSpent, forKey: "timeSpent")
        try values.encodeIfPresent(originalEstimateSeconds, forKey: "originalEstimateSeconds")
        try values.encodeIfPresent(remainingEstimateSeconds, forKey: "remainingEstimateSeconds")
        try values.encodeIfPresent(timeSpentSeconds, forKey: "timeSpentSeconds")
    }
}
