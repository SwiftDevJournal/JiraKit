// Generated by Create API
// https://github.com/CreateAPI/CreateAPI

import Foundation
import NaiveDate

/// Details of a custom field.
public struct UpdateCustomFieldDetails: Codable {
    /// The name of the custom field. It doesn't have to be unique. The maximum length is 255 characters.
    public var name: String?
    /// The description of the custom field. The maximum length is 40000 characters.
    public var description: String?
    /// The searcher that defines the way the field is searched in Jira. It can be set to `null`, otherwise you must specify the valid searcher for the field type, as listed below (abbreviated values shown):
    /// 
    ///  *  `cascadingselect`: `cascadingselectsearcher`
    ///  *  `datepicker`: `daterange`
    ///  *  `datetime`: `datetimerange`
    ///  *  `float`: `exactnumber` or `numberrange`
    ///  *  `grouppicker`: `grouppickersearcher`
    ///  *  `importid`: `exactnumber` or `numberrange`
    ///  *  `labels`: `labelsearcher`
    ///  *  `multicheckboxes`: `multiselectsearcher`
    ///  *  `multigrouppicker`: `multiselectsearcher`
    ///  *  `multiselect`: `multiselectsearcher`
    ///  *  `multiuserpicker`: `userpickergroupsearcher`
    ///  *  `multiversion`: `versionsearcher`
    ///  *  `project`: `projectsearcher`
    ///  *  `radiobuttons`: `multiselectsearcher`
    ///  *  `readonlyfield`: `textsearcher`
    ///  *  `select`: `multiselectsearcher`
    ///  *  `textarea`: `textsearcher`
    ///  *  `textfield`: `textsearcher`
    ///  *  `url`: `exacttextsearcher`
    ///  *  `userpicker`: `userpickergroupsearcher`
    ///  *  `version`: `versionsearcher`
    public var searcherKey: SearcherKey?

    /// The searcher that defines the way the field is searched in Jira. It can be set to `null`, otherwise you must specify the valid searcher for the field type, as listed below (abbreviated values shown):
    /// 
    ///  *  `cascadingselect`: `cascadingselectsearcher`
    ///  *  `datepicker`: `daterange`
    ///  *  `datetime`: `datetimerange`
    ///  *  `float`: `exactnumber` or `numberrange`
    ///  *  `grouppicker`: `grouppickersearcher`
    ///  *  `importid`: `exactnumber` or `numberrange`
    ///  *  `labels`: `labelsearcher`
    ///  *  `multicheckboxes`: `multiselectsearcher`
    ///  *  `multigrouppicker`: `multiselectsearcher`
    ///  *  `multiselect`: `multiselectsearcher`
    ///  *  `multiuserpicker`: `userpickergroupsearcher`
    ///  *  `multiversion`: `versionsearcher`
    ///  *  `project`: `projectsearcher`
    ///  *  `radiobuttons`: `multiselectsearcher`
    ///  *  `readonlyfield`: `textsearcher`
    ///  *  `select`: `multiselectsearcher`
    ///  *  `textarea`: `textsearcher`
    ///  *  `textfield`: `textsearcher`
    ///  *  `url`: `exacttextsearcher`
    ///  *  `userpicker`: `userpickergroupsearcher`
    ///  *  `version`: `versionsearcher`
    public enum SearcherKey: String, Codable, CaseIterable {
        case comAtlassianJiraPluginSystemCustomfieldtypesCascadingselectsearcher = "com.atlassian.jira.plugin.system.customfieldtypes:cascadingselectsearcher"
        case comAtlassianJiraPluginSystemCustomfieldtypesDaterange = "com.atlassian.jira.plugin.system.customfieldtypes:daterange"
        case comAtlassianJiraPluginSystemCustomfieldtypesDatetimerange = "com.atlassian.jira.plugin.system.customfieldtypes:datetimerange"
        case comAtlassianJiraPluginSystemCustomfieldtypesExactnumber = "com.atlassian.jira.plugin.system.customfieldtypes:exactnumber"
        case comAtlassianJiraPluginSystemCustomfieldtypesExacttextsearcher = "com.atlassian.jira.plugin.system.customfieldtypes:exacttextsearcher"
        case comAtlassianJiraPluginSystemCustomfieldtypesGrouppickersearcher = "com.atlassian.jira.plugin.system.customfieldtypes:grouppickersearcher"
        case comAtlassianJiraPluginSystemCustomfieldtypesLabelsearcher = "com.atlassian.jira.plugin.system.customfieldtypes:labelsearcher"
        case comAtlassianJiraPluginSystemCustomfieldtypesMultiselectsearcher = "com.atlassian.jira.plugin.system.customfieldtypes:multiselectsearcher"
        case comAtlassianJiraPluginSystemCustomfieldtypesNumberrange = "com.atlassian.jira.plugin.system.customfieldtypes:numberrange"
        case comAtlassianJiraPluginSystemCustomfieldtypesProjectsearcher = "com.atlassian.jira.plugin.system.customfieldtypes:projectsearcher"
        case comAtlassianJiraPluginSystemCustomfieldtypesTextsearcher = "com.atlassian.jira.plugin.system.customfieldtypes:textsearcher"
        case comAtlassianJiraPluginSystemCustomfieldtypesUserpickergroupsearcher = "com.atlassian.jira.plugin.system.customfieldtypes:userpickergroupsearcher"
        case comAtlassianJiraPluginSystemCustomfieldtypesVersionsearcher = "com.atlassian.jira.plugin.system.customfieldtypes:versionsearcher"
    }

    public init(name: String? = nil, description: String? = nil, searcherKey: SearcherKey? = nil) {
        self.name = name
        self.description = description
        self.searcherKey = searcherKey
    }

    public init(from decoder: Decoder) throws {
        let values = try decoder.container(keyedBy: StringCodingKey.self)
        self.name = try values.decodeIfPresent(String.self, forKey: "name")
        self.description = try values.decodeIfPresent(String.self, forKey: "description")
        self.searcherKey = try values.decodeIfPresent(SearcherKey.self, forKey: "searcherKey")
    }

    public func encode(to encoder: Encoder) throws {
        var values = encoder.container(keyedBy: StringCodingKey.self)
        try values.encodeIfPresent(name, forKey: "name")
        try values.encodeIfPresent(description, forKey: "description")
        try values.encodeIfPresent(searcherKey, forKey: "searcherKey")
    }
}
