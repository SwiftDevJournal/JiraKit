// Generated by Create API
// https://github.com/CreateAPI/CreateAPI

import Foundation
import NaiveDate

public struct UserBean: Codable {
    /// This property is deprecated in favor of `accountId` because of privacy changes. See the [migration guide](https://developer.atlassian.com/cloud/jira/platform/deprecation-notice-user-privacy-api-migration-guide/) for details.  
    /// The key of the user.
    public var key: String?
    /// The URL of the user.
    public var this: URL?
    /// This property is deprecated in favor of `accountId` because of privacy changes. See the [migration guide](https://developer.atlassian.com/cloud/jira/platform/deprecation-notice-user-privacy-api-migration-guide/) for details.  
    /// The username of the user.
    public var name: String?
    /// The display name of the user. Depending on the userâ€™s privacy setting, this may return an alternative value.
    public var displayName: String?
    /// Whether the user is active.
    public var isActive: Bool?
    /// The account ID of the user, which uniquely identifies the user across all Atlassian products. For example, *5b10ac8d82e05b22cc7d4ef5*.
    public var accountID: String?
    /// The avatars of the user.
    public var avatarURLs: UserBeanAvatarURLs?

    public init(key: String? = nil, this: URL? = nil, name: String? = nil, displayName: String? = nil, isActive: Bool? = nil, accountID: String? = nil, avatarURLs: UserBeanAvatarURLs? = nil) {
        self.key = key
        self.this = this
        self.name = name
        self.displayName = displayName
        self.isActive = isActive
        self.accountID = accountID
        self.avatarURLs = avatarURLs
    }

    public init(from decoder: Decoder) throws {
        let values = try decoder.container(keyedBy: StringCodingKey.self)
        self.key = try values.decodeIfPresent(String.self, forKey: "key")
        self.this = try values.decodeIfPresent(URL.self, forKey: "self")
        self.name = try values.decodeIfPresent(String.self, forKey: "name")
        self.displayName = try values.decodeIfPresent(String.self, forKey: "displayName")
        self.isActive = try values.decodeIfPresent(Bool.self, forKey: "active")
        self.accountID = try values.decodeIfPresent(String.self, forKey: "accountId")
        self.avatarURLs = try values.decodeIfPresent(UserBeanAvatarURLs.self, forKey: "avatarUrls")
    }

    public func encode(to encoder: Encoder) throws {
        var values = encoder.container(keyedBy: StringCodingKey.self)
        try values.encodeIfPresent(key, forKey: "key")
        try values.encodeIfPresent(this, forKey: "self")
        try values.encodeIfPresent(name, forKey: "name")
        try values.encodeIfPresent(displayName, forKey: "displayName")
        try values.encodeIfPresent(isActive, forKey: "active")
        try values.encodeIfPresent(accountID, forKey: "accountId")
        try values.encodeIfPresent(avatarURLs, forKey: "avatarUrls")
    }
}
