// Generated by Create API
// https://github.com/CreateAPI/CreateAPI

import Foundation
import NaiveDate

/// Counts of the number of issues in various statuses.
public struct VersionIssuesStatus: Codable {
    /// Count of issues with a status other than *to do*, *in progress*, and *done*.
    public var unmapped: Int64?
    /// Count of issues with status *to do*.
    public var toDo: Int64?
    /// Count of issues with status *in progress*.
    public var inProgress: Int64?
    /// Count of issues with status *done*.
    public var done: Int64?

    public init(unmapped: Int64? = nil, toDo: Int64? = nil, inProgress: Int64? = nil, done: Int64? = nil) {
        self.unmapped = unmapped
        self.toDo = toDo
        self.inProgress = inProgress
        self.done = done
    }

    public init(from decoder: Decoder) throws {
        let values = try decoder.container(keyedBy: StringCodingKey.self)
        self.unmapped = try values.decodeIfPresent(Int64.self, forKey: "unmapped")
        self.toDo = try values.decodeIfPresent(Int64.self, forKey: "toDo")
        self.inProgress = try values.decodeIfPresent(Int64.self, forKey: "inProgress")
        self.done = try values.decodeIfPresent(Int64.self, forKey: "done")
    }

    public func encode(to encoder: Encoder) throws {
        var values = encoder.container(keyedBy: StringCodingKey.self)
        try values.encodeIfPresent(unmapped, forKey: "unmapped")
        try values.encodeIfPresent(toDo, forKey: "toDo")
        try values.encodeIfPresent(inProgress, forKey: "inProgress")
        try values.encodeIfPresent(done, forKey: "done")
    }
}
