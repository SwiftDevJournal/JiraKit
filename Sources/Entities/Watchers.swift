// Generated by Create API
// https://github.com/CreateAPI/CreateAPI

import Foundation
import NaiveDate

/// The details of watchers on an issue.
public struct Watchers: Codable {
    /// The URL of these issue watcher details.
    public var this: String?
    /// Whether the calling user is watching this issue.
    public var isWatching: Bool?
    /// The number of users watching this issue.
    public var watchCount: Int?
    /// Details of the users watching this issue.
    public var watchers: [UserDetails]?

    public init(this: String? = nil, isWatching: Bool? = nil, watchCount: Int? = nil, watchers: [UserDetails]? = nil) {
        self.this = this
        self.isWatching = isWatching
        self.watchCount = watchCount
        self.watchers = watchers
    }

    public init(from decoder: Decoder) throws {
        let values = try decoder.container(keyedBy: StringCodingKey.self)
        self.this = try values.decodeIfPresent(String.self, forKey: "self")
        self.isWatching = try values.decodeIfPresent(Bool.self, forKey: "isWatching")
        self.watchCount = try values.decodeIfPresent(Int.self, forKey: "watchCount")
        self.watchers = try values.decodeIfPresent([UserDetails].self, forKey: "watchers")
    }

    public func encode(to encoder: Encoder) throws {
        var values = encoder.container(keyedBy: StringCodingKey.self)
        try values.encodeIfPresent(this, forKey: "self")
        try values.encodeIfPresent(isWatching, forKey: "isWatching")
        try values.encodeIfPresent(watchCount, forKey: "watchCount")
        try values.encodeIfPresent(watchers, forKey: "watchers")
    }
}
