// Generated by Create API
// https://github.com/CreateAPI/CreateAPI

import Foundation
import NaiveDate

/// Details of workflow transition rules.
public struct WorkflowRulesSearchDetails: Codable {
    /// The workflow ID.
    ///
    /// Example: "a498d711-685d-428d-8c3e-bc03bb450ea7"
    public var workflowEntityID: UUID?
    /// List of workflow rule IDs that do not belong to the workflow or can not be found.
    public var invalidRules: [UUID]?
    /// List of valid workflow transition rules.
    public var validRules: [WorkflowTransitionRules]?

    public init(workflowEntityID: UUID? = nil, invalidRules: [UUID]? = nil, validRules: [WorkflowTransitionRules]? = nil) {
        self.workflowEntityID = workflowEntityID
        self.invalidRules = invalidRules
        self.validRules = validRules
    }

    public init(from decoder: Decoder) throws {
        let values = try decoder.container(keyedBy: StringCodingKey.self)
        self.workflowEntityID = try values.decodeIfPresent(UUID.self, forKey: "workflowEntityId")
        self.invalidRules = try values.decodeIfPresent([UUID].self, forKey: "invalidRules")
        self.validRules = try values.decodeIfPresent([WorkflowTransitionRules].self, forKey: "validRules")
    }

    public func encode(to encoder: Encoder) throws {
        var values = encoder.container(keyedBy: StringCodingKey.self)
        try values.encodeIfPresent(workflowEntityID, forKey: "workflowEntityId")
        try values.encodeIfPresent(invalidRules, forKey: "invalidRules")
        try values.encodeIfPresent(validRules, forKey: "validRules")
    }
}
