// Generated by Create API
// https://github.com/CreateAPI/CreateAPI

import Foundation
import Get
import URLQueryEncoder

extension Paths.API.__3 {
    public var applicationProperties: ApplicationProperties {
        ApplicationProperties(path: path + "/application-properties")
    }

    public struct ApplicationProperties {
        /// Path: `/rest/api/3/application-properties`
        public let path: String

        /// Get application property
        ///
        /// Returns all application properties or an application property.
        /// 
        /// If you specify a value for the `key` parameter, then an application property is returned as an object (not in an array). Otherwise, an array of all editable application properties is returned. See [Set application property](#api-rest-api-3-application-properties-id-put) for descriptions of editable properties.
        /// 
        /// **[Permissions](#permissions) required:** *Administer Jira* [global permission](https://confluence.atlassian.com/x/x4dKLg).
        public func get(parameters: GetParameters? = nil) -> Request<[JiraKit.ApplicationProperty]> {
            Request(path: path, method: "GET", query: parameters?.asQuery, id: "getApplicationProperty")
        }

        public struct GetParameters {
            public var key: String?
            public var permissionLevel: String?
            public var keyFilter: String?

            public init(key: String? = nil, permissionLevel: String? = nil, keyFilter: String? = nil) {
                self.key = key
                self.permissionLevel = permissionLevel
                self.keyFilter = keyFilter
            }

            public var asQuery: [(String, String?)] {
                let encoder = URLQueryEncoder()
                encoder.encode(key, forKey: "key")
                encoder.encode(permissionLevel, forKey: "permissionLevel")
                encoder.encode(keyFilter, forKey: "keyFilter")
                return encoder.items
            }
        }
    }
}
