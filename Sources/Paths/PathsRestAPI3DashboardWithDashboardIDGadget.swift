// Generated by Create API
// https://github.com/CreateAPI/CreateAPI

import Foundation
import Get
import URLQueryEncoder

extension Paths.API.__3.Dashboard.WithDashboardID {
    public var gadget: Gadget {
        Gadget(path: path + "/gadget")
    }

    public struct Gadget {
        /// Path: `/rest/api/3/dashboard/{dashboardId}/gadget`
        public let path: String

        /// Get gadgets
        ///
        /// Returns a list of dashboard gadgets on a dashboard.
        /// 
        /// This operation returns:
        /// 
        ///  *  Gadgets from a list of IDs, when `id` is set.
        ///  *  Gadgets with a module key, when `moduleKey` is set.
        ///  *  Gadgets from a list of URIs, when `uri` is set.
        ///  *  All gadgets, when no other parameters are set.
        /// 
        /// This operation can be accessed anonymously.
        /// 
        /// **[Permissions](#permissions) required:** None.
        public func get(parameters: GetParameters? = nil) -> Request<JiraKit.DashboardGadgetResponse> {
            Request(path: path, method: "GET", query: parameters?.asQuery, id: "getAllGadgets")
        }

        public struct GetParameters {
            public var moduleKey: [String]?
            public var uri: [String]?
            public var gadgetID: [Int64]?

            public init(moduleKey: [String]? = nil, uri: [String]? = nil, gadgetID: [Int64]? = nil) {
                self.moduleKey = moduleKey
                self.uri = uri
                self.gadgetID = gadgetID
            }

            public var asQuery: [(String, String?)] {
                let encoder = URLQueryEncoder()
                encoder.encode(moduleKey, forKey: "moduleKey")
                encoder.encode(uri, forKey: "uri")
                encoder.encode(gadgetID, forKey: "gadgetId")
                return encoder.items
            }
        }

        /// Add gadget to dashboard
        ///
        /// Adds a gadget to a dashboard.
        /// 
        /// **[Permissions](#permissions) required:** None.
        public func post(_ body: JiraKit.DashboardGadgetSettings) -> Request<JiraKit.DashboardGadget> {
            Request(path: path, method: "POST", body: body, id: "addGadget")
        }
    }
}
