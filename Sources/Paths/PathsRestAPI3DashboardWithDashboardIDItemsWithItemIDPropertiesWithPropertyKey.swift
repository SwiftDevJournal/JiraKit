// Generated by Create API
// https://github.com/CreateAPI/CreateAPI

import Foundation
import Get
import URLQueryEncoder

extension Paths.API.__3.Dashboard.WithDashboardID.Items.WithItemID.Properties {
    public func propertyKey(_ propertyKey: String) -> WithPropertyKey {
        WithPropertyKey(path: "\(path)/\(propertyKey)")
    }

    public struct WithPropertyKey {
        /// Path: `/rest/api/3/dashboard/{dashboardId}/items/{itemId}/properties/{propertyKey}`
        public let path: String

        /// Get dashboard item property
        ///
        /// Returns the key and value of a dashboard item property.
        /// 
        /// A dashboard item enables an app to add user-specific information to a user dashboard. Dashboard items are exposed to users as gadgets that users can add to their dashboards. For more information on how users do this, see [Adding and customizing gadgets](https://confluence.atlassian.com/x/7AeiLQ).
        /// 
        /// When an app creates a dashboard item it registers a callback to receive the dashboard item ID. The callback fires whenever the item is rendered or, where the item is configurable, the user edits the item. The app then uses this resource to store the item's content or configuration details. For more information on working with dashboard items, see [ Building a dashboard item for a JIRA Connect add-on](https://developer.atlassian.com/server/jira/platform/guide-building-a-dashboard-item-for-a-jira-connect-add-on-33746254/) and the [Dashboard Item](https://developer.atlassian.com/cloud/jira/platform/modules/dashboard-item/) documentation.
        /// 
        /// There is no resource to set or get dashboard items.
        /// 
        /// This operation can be accessed anonymously.
        /// 
        /// **[Permissions](#permissions) required:** The user must be the owner of the dashboard or have the dashboard shared with them. Note, users with the *Administer Jira* [global permission](https://confluence.atlassian.com/x/x4dKLg) are considered owners of the System dashboard. The System dashboard is considered to be shared with all other users, and is accessible to anonymous users when Jiraâ€™s anonymous access is permitted.
        public var get: Request<JiraKit.EntityProperty> {
            Request(method: "GET", url: path, id: "getDashboardItemProperty")
        }

        /// Set dashboard item property
        ///
        /// Sets the value of a dashboard item property. Use this resource in apps to store custom data against a dashboard item.
        /// 
        /// A dashboard item enables an app to add user-specific information to a user dashboard. Dashboard items are exposed to users as gadgets that users can add to their dashboards. For more information on how users do this, see [Adding and customizing gadgets](https://confluence.atlassian.com/x/7AeiLQ).
        /// 
        /// When an app creates a dashboard item it registers a callback to receive the dashboard item ID. The callback fires whenever the item is rendered or, where the item is configurable, the user edits the item. The app then uses this resource to store the item's content or configuration details. For more information on working with dashboard items, see [ Building a dashboard item for a JIRA Connect add-on](https://developer.atlassian.com/server/jira/platform/guide-building-a-dashboard-item-for-a-jira-connect-add-on-33746254/) and the [Dashboard Item](https://developer.atlassian.com/cloud/jira/platform/modules/dashboard-item/) documentation.
        /// 
        /// There is no resource to set or get dashboard items.
        /// 
        /// The value of the request body must be a [valid](http://tools.ietf.org/html/rfc4627), non-empty JSON blob. The maximum length is 32768 characters.
        /// 
        /// This operation can be accessed anonymously.
        /// 
        /// **[Permissions](#permissions) required:** The user must be the owner of the dashboard. Note, users with the *Administer Jira* [global permission](https://confluence.atlassian.com/x/x4dKLg) are considered owners of the System dashboard.
        public func put(_ body: AnyJSON) -> Request<AnyJSON> {
            Request(method: "PUT", url: path, body: body, id: "setDashboardItemProperty")
        }

        /// Delete dashboard item property
        ///
        /// Deletes a dashboard item property.
        /// 
        /// This operation can be accessed anonymously.
        /// 
        /// **[Permissions](#permissions) required:** The user must be the owner of the dashboard. Note, users with the *Administer Jira* [global permission](https://confluence.atlassian.com/x/x4dKLg) are considered owners of the System dashboard.
        public var delete: Request<Void> {
            Request(method: "DELETE", url: path, id: "deleteDashboardItemProperty")
        }
    }
}
