// Generated by Create API
// https://github.com/CreateAPI/CreateAPI

import Foundation
import Get
import URLQueryEncoder

extension Paths.API.__3.Field.WithFieldID.Context {
    public var projectmapping: Projectmapping {
        Projectmapping(path: path + "/projectmapping")
    }

    public struct Projectmapping {
        /// Path: `/rest/api/3/field/{fieldId}/context/projectmapping`
        public let path: String

        /// Get project mappings for custom field context
        ///
        /// Returns a [paginated](#pagination) list of context to project mappings for a custom field. The result can be filtered by `contextId`. Otherwise, all mappings are returned. Invalid IDs are ignored.
        /// 
        /// **[Permissions](#permissions) required:** *Administer Jira* [global permission](https://confluence.atlassian.com/x/x4dKLg).
        public func get(parameters: GetParameters? = nil) -> Request<JiraKit.PageBeanCustomFieldContextProjectMapping> {
            Request(method: "GET", url: path, query: parameters?.asQuery, id: "getProjectContextMapping")
        }

        public struct GetParameters {
            public var contextID: [Int64]?
            public var startAt: Int64?
            public var maxResults: Int32?

            public init(contextID: [Int64]? = nil, startAt: Int64? = nil, maxResults: Int32? = nil) {
                self.contextID = contextID
                self.startAt = startAt
                self.maxResults = maxResults
            }

            public var asQuery: [(String, String?)] {
                let encoder = URLQueryEncoder()
                encoder.encode(contextID, forKey: "contextId")
                encoder.encode(startAt, forKey: "startAt")
                encoder.encode(maxResults, forKey: "maxResults")
                return encoder.items
            }
        }
    }
}
