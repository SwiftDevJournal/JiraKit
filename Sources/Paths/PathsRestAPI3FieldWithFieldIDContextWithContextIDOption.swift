// Generated by Create API
// https://github.com/CreateAPI/CreateAPI

import Foundation
import Get
import URLQueryEncoder

extension Paths.API.__3.Field.WithFieldID.Context.WithContextID {
    public var option: Option {
        Option(path: path + "/option")
    }

    public struct Option {
        /// Path: `/rest/api/3/field/{fieldId}/context/{contextId}/option`
        public let path: String

        /// Get custom field options (context)
        ///
        /// Returns a [paginated](#pagination) list of all custom field option for a context. Options are returned first then cascading options, in the order they display in Jira.
        /// 
        /// This operation works for custom field options created in Jira or the operations from this resource. **To work with issue field select list options created for Connect apps use the [Issue custom field options (apps)](#api-group-issue-custom-field-options--apps-) operations.**
        /// 
        /// **[Permissions](#permissions) required:** *Administer Jira* [global permission](https://confluence.atlassian.com/x/x4dKLg).
        public func get(parameters: GetParameters? = nil) -> Request<JiraKit.PageBeanCustomFieldContextOption> {
            Request(method: "GET", url: path, query: parameters?.asQuery, id: "getOptionsForContext")
        }

        public struct GetParameters {
            public var optionID: Int64?
            public var isOnlyOptions: Bool?
            public var startAt: Int64?
            public var maxResults: Int32?

            public init(optionID: Int64? = nil, isOnlyOptions: Bool? = nil, startAt: Int64? = nil, maxResults: Int32? = nil) {
                self.optionID = optionID
                self.isOnlyOptions = isOnlyOptions
                self.startAt = startAt
                self.maxResults = maxResults
            }

            public var asQuery: [(String, String?)] {
                let encoder = URLQueryEncoder()
                encoder.encode(optionID, forKey: "optionId")
                encoder.encode(isOnlyOptions, forKey: "onlyOptions")
                encoder.encode(startAt, forKey: "startAt")
                encoder.encode(maxResults, forKey: "maxResults")
                return encoder.items
            }
        }

        /// Create custom field options (context)
        ///
        /// Creates options and, where the custom select field is of the type Select List (cascading), cascading options for a custom select field. The options are added to a context of the field.
        /// 
        /// The maximum number of options that can be created per request is 1000 and each field can have a maximum of 10000 options.
        /// 
        /// This operation works for custom field options created in Jira or the operations from this resource. **To work with issue field select list options created for Connect apps use the [Issue custom field options (apps)](#api-group-issue-custom-field-options--apps-) operations.**
        /// 
        /// **[Permissions](#permissions) required:** *Administer Jira* [global permission](https://confluence.atlassian.com/x/x4dKLg).
        public func post(_ body: JiraKit.BulkCustomFieldOptionCreateRequest) -> Request<JiraKit.CustomFieldCreatedContextOptionsList> {
            Request(method: "POST", url: path, body: body, id: "createCustomFieldOption")
        }

        /// Update custom field options (context)
        ///
        /// Updates the options of a custom field.
        /// 
        /// If any of the options are not found, no options are updated. Options where the values in the request match the current values aren't updated and aren't reported in the response.
        /// 
        /// Note that this operation **only works for issue field select list options created in Jira or using operations from the [Issue custom field options](#api-group-Issue-custom-field-options) resource**, it cannot be used with issue field select list options created by Connect apps.
        /// 
        /// **[Permissions](#permissions) required:** *Administer Jira* [global permission](https://confluence.atlassian.com/x/x4dKLg).
        public func put(_ body: JiraKit.BulkCustomFieldOptionUpdateRequest) -> Request<JiraKit.CustomFieldUpdatedContextOptionsList> {
            Request(method: "PUT", url: path, body: body, id: "updateCustomFieldOption")
        }
    }
}
