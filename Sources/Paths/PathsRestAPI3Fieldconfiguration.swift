// Generated by Create API
// https://github.com/CreateAPI/CreateAPI

import Foundation
import Get
import URLQueryEncoder

extension Paths.API.__3 {
    public var fieldconfiguration: Fieldconfiguration {
        Fieldconfiguration(path: path + "/fieldconfiguration")
    }

    public struct Fieldconfiguration {
        /// Path: `/rest/api/3/fieldconfiguration`
        public let path: String

        /// Get all field configurations
        ///
        /// Returns a [paginated](#pagination) list of field configurations. The list can be for all field configurations or a subset determined by any combination of these criteria:
        /// 
        ///  *  a list of field configuration item IDs.
        ///  *  whether the field configuration is a default.
        ///  *  whether the field configuration name or description contains a query string.
        /// 
        /// Only field configurations used in company-managed (classic) projects are returned.
        /// 
        /// **[Permissions](#permissions) required:** *Administer Jira* [global permission](https://confluence.atlassian.com/x/x4dKLg).
        public func get(parameters: GetParameters? = nil) -> Request<JiraKit.PageBeanFieldConfigurationDetails> {
            Request(method: "GET", url: path, query: parameters?.asQuery, id: "getAllFieldConfigurations")
        }

        public struct GetParameters {
            public var startAt: Int?
            public var maxResults: Int?
            public var id: [Int]?
            public var isDefault: Bool?
            public var query: String?

            public init(startAt: Int? = nil, maxResults: Int? = nil, id: [Int]? = nil, isDefault: Bool? = nil, query: String? = nil) {
                self.startAt = startAt
                self.maxResults = maxResults
                self.id = id
                self.isDefault = isDefault
                self.query = query
            }

            public var asQuery: [(String, String?)] {
                let encoder = URLQueryEncoder()
                encoder.encode(startAt, forKey: "startAt")
                encoder.encode(maxResults, forKey: "maxResults")
                encoder.encode(id, forKey: "id")
                encoder.encode(isDefault, forKey: "isDefault")
                encoder.encode(query, forKey: "query")
                return encoder.items
            }
        }

        /// Create field configuration
        ///
        /// Creates a field configuration. The field configuration is created with the same field properties as the default configuration, with all the fields being optional.
        /// 
        /// This operation can only create configurations for use in company-managed (classic) projects.
        /// 
        /// **[Permissions](#permissions) required:** *Administer Jira* [global permission](https://confluence.atlassian.com/x/x4dKLg).
        public func post(_ body: JiraKit.FieldConfigurationDetails) -> Request<JiraKit.FieldConfiguration> {
            Request(method: "POST", url: path, body: body, id: "createFieldConfiguration")
        }
    }
}
