// Generated by Create API
// https://github.com/CreateAPI/CreateAPI

import Foundation
import Get
import URLQueryEncoder

extension Paths.API.__3.Filter {
    public func id(_ id: Int) -> WithID {
        WithID(path: "\(path)/\(id)")
    }

    public struct WithID {
        /// Path: `/rest/api/3/filter/{id}`
        public let path: String

        /// Get filter
        ///
        /// Returns a filter.
        /// 
        /// This operation can be accessed anonymously.
        /// 
        /// **[Permissions](#permissions) required:** None, however, the filter is only returned where it is:
        /// 
        ///  *  owned by the user.
        ///  *  shared with a group that the user is a member of.
        ///  *  shared with a private project that the user has *Browse projects* [project permission](https://confluence.atlassian.com/x/yodKLg) for.
        ///  *  shared with a public project.
        ///  *  shared with the public.
        public func get(expand: String? = nil, isOverrideSharePermissions: Bool? = nil) -> Request<JiraKit.Filter> {
            Request(path: path, method: "GET", query: makeGetQuery(expand, isOverrideSharePermissions), id: "getFilter")
        }

        private func makeGetQuery(_ expand: String?, _ isOverrideSharePermissions: Bool?) -> [(String, String?)] {
            let encoder = URLQueryEncoder()
            encoder.encode(expand, forKey: "expand")
            encoder.encode(isOverrideSharePermissions, forKey: "overrideSharePermissions")
            return encoder.items
        }

        /// Update filter
        ///
        /// Updates a filter. Use this operation to update a filter's name, description, JQL, or sharing.
        /// 
        /// **[Permissions](#permissions) required:** Permission to access Jira, however the user must own the filter.
        public func put(expand: String? = nil, isOverrideSharePermissions: Bool? = nil, _ body: JiraKit.Filter) -> Request<JiraKit.Filter> {
            Request(path: path, method: "PUT", query: makePutQuery(expand, isOverrideSharePermissions), body: body, id: "updateFilter")
        }

        private func makePutQuery(_ expand: String?, _ isOverrideSharePermissions: Bool?) -> [(String, String?)] {
            let encoder = URLQueryEncoder()
            encoder.encode(expand, forKey: "expand")
            encoder.encode(isOverrideSharePermissions, forKey: "overrideSharePermissions")
            return encoder.items
        }

        /// Delete filter
        ///
        /// Delete a filter.
        /// 
        /// **[Permissions](#permissions) required:** Permission to access Jira, however filters can only be deleted by the creator of the filter or a user with *Administer Jira* [global permission](https://confluence.atlassian.com/x/x4dKLg).
        public var delete: Request<Void> {
            Request(path: path, method: "DELETE", id: "deleteFilter")
        }
    }
}
