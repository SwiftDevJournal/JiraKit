// Generated by Create API
// https://github.com/CreateAPI/CreateAPI

import Foundation
import Get
import URLQueryEncoder

extension Paths.API.__3.Issue.WithIssueIDOrKey.Properties {
    public func propertyKey(_ propertyKey: String) -> WithPropertyKey {
        WithPropertyKey(path: "\(path)/\(propertyKey)")
    }

    public struct WithPropertyKey {
        /// Path: `/rest/api/3/issue/{issueIdOrKey}/properties/{propertyKey}`
        public let path: String

        /// Get issue property
        ///
        /// Returns the key and value of an issue's property.
        /// 
        /// This operation can be accessed anonymously.
        /// 
        /// **[Permissions](#permissions) required:**
        /// 
        ///  *  *Browse projects* [project permission](https://confluence.atlassian.com/x/yodKLg) for the project containing the issue.
        ///  *  If [issue-level security](https://confluence.atlassian.com/x/J4lKLg) is configured, issue-level security permission to view the issue.
        public var get: Request<JiraKit.EntityProperty> {
            Request(method: "GET", url: path, id: "getIssueProperty")
        }

        /// Set issue property
        ///
        /// Sets the value of an issue's property. Use this resource to store custom data against an issue.
        /// 
        /// The value of the request body must be a [valid](http://tools.ietf.org/html/rfc4627), non-empty JSON blob. The maximum length is 32768 characters.
        /// 
        /// This operation can be accessed anonymously.
        /// 
        /// **[Permissions](#permissions) required:**
        /// 
        ///  *  *Browse projects* and *Edit issues* [project permissions](https://confluence.atlassian.com/x/yodKLg) for the project containing the issue.
        ///  *  If [issue-level security](https://confluence.atlassian.com/x/J4lKLg) is configured, issue-level security permission to view the issue.
        public func put(_ body: AnyJSON) -> Request<AnyJSON> {
            Request(method: "PUT", url: path, body: body, id: "setIssueProperty")
        }

        /// Delete issue property
        ///
        /// Deletes an issue's property.
        /// 
        /// This operation can be accessed anonymously.
        /// 
        /// **[Permissions](#permissions) required:**
        /// 
        ///  *  *Browse projects* and *Edit issues* [project permissions](https://confluence.atlassian.com/x/yodKLg) for the project containing the issue.
        ///  *  If [issue-level security](https://confluence.atlassian.com/x/J4lKLg) is configured, issue-level security permission to view the issue.
        public var delete: Request<Void> {
            Request(method: "DELETE", url: path, id: "deleteIssueProperty")
        }
    }
}
