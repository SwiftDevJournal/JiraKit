// Generated by Create API
// https://github.com/CreateAPI/CreateAPI

import Foundation
import Get
import URLQueryEncoder

extension Paths.API.__3.Issue.WithIssueIDOrKey.Remotelink {
    public func linkID(_ linkID: String) -> WithLinkID {
        WithLinkID(path: "\(path)/\(linkID)")
    }

    public struct WithLinkID {
        /// Path: `/rest/api/3/issue/{issueIdOrKey}/remotelink/{linkId}`
        public let path: String

        /// Get remote issue link by ID
        ///
        /// Returns a remote issue link for an issue.
        /// 
        /// This operation requires [issue linking to be active](https://confluence.atlassian.com/x/yoXKM).
        /// 
        /// This operation can be accessed anonymously.
        /// 
        /// **[Permissions](#permissions) required:**
        /// 
        ///  *  *Browse projects* [project permission](https://confluence.atlassian.com/x/yodKLg) for the project that the issue is in.
        ///  *  If [issue-level security](https://confluence.atlassian.com/x/J4lKLg) is configured, issue-level security permission to view the issue.
        public var get: Request<JiraKit.RemoteIssueLink> {
            Request(method: "GET", url: path, id: "getRemoteIssueLinkById")
        }

        /// Update remote issue link by ID
        ///
        /// Updates a remote issue link for an issue.
        /// 
        /// Note: Fields without values in the request are set to null.
        /// 
        /// This operation requires [issue linking to be active](https://confluence.atlassian.com/x/yoXKM).
        /// 
        /// This operation can be accessed anonymously.
        /// 
        /// **[Permissions](#permissions) required:**
        /// 
        ///  *  *Browse projects* and *Link issues* [project permission](https://confluence.atlassian.com/x/yodKLg) for the project that the issue is in.
        ///  *  If [issue-level security](https://confluence.atlassian.com/x/J4lKLg) is configured, issue-level security permission to view the issue.
        public func put(_ body: JiraKit.RemoteIssueLinkRequest) -> Request<AnyJSON> {
            Request(method: "PUT", url: path, body: body, id: "updateRemoteIssueLink")
        }

        /// Delete remote issue link by ID
        ///
        /// Deletes a remote issue link from an issue.
        /// 
        /// This operation requires [issue linking to be active](https://confluence.atlassian.com/x/yoXKM).
        /// 
        /// This operation can be accessed anonymously.
        /// 
        /// **[Permissions](#permissions) required:**
        /// 
        ///  *  *Browse projects*, *Edit issues*, and *Link issues* [project permission](https://confluence.atlassian.com/x/yodKLg) for the project that the issue is in.
        ///  *  If [issue-level security](https://confluence.atlassian.com/x/J4lKLg) is configured, issue-level security permission to view the issue.
        public var delete: Request<Void> {
            Request(method: "DELETE", url: path, id: "deleteRemoteIssueLinkById")
        }
    }
}
