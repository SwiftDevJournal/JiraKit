// Generated by Create API
// https://github.com/CreateAPI/CreateAPI

import Foundation
import Get
import URLQueryEncoder

extension Paths.API.__3 {
    public var project: Project {
        Project(path: path + "/project")
    }

    public struct Project {
        /// Path: `/rest/api/3/project`
        public let path: String

        /// Get all projects
        ///
        /// Returns all projects visible to the user. Deprecated, use [ Get projects paginated](#api-rest-api-3-project-search-get) that supports search and pagination.
        /// 
        /// This operation can be accessed anonymously.
        /// 
        /// **[Permissions](#permissions) required:** Projects are returned only where the user has *Browse Projects* or *Administer projects* [project permission](https://confluence.atlassian.com/x/yodKLg) for the project.
        @available(*, deprecated, message: "Deprecated")
        public func get(parameters: GetParameters? = nil) -> Request<[JiraKit.Project]> {
            Request(method: "GET", url: path, query: parameters?.asQuery, id: "getAllProjects")
        }

        public struct GetParameters {
            public var expand: String?
            public var recent: Int32?
            public var properties: [String]?

            public init(expand: String? = nil, recent: Int32? = nil, properties: [String]? = nil) {
                self.expand = expand
                self.recent = recent
                self.properties = properties
            }

            public var asQuery: [(String, String?)] {
                let encoder = URLQueryEncoder()
                encoder.encode(expand, forKey: "expand")
                encoder.encode(recent, forKey: "recent")
                encoder.encode(properties, forKey: "properties")
                return encoder.items
            }
        }

        /// Create project
        ///
        /// Creates a project based on a project type template, as shown in the following table:
        /// 
        /// | Project Type Key | Project Template Key |  
        /// |--|--|  
        /// | `business` | `com.atlassian.jira-core-project-templates:jira-core-simplified-content-management`, `com.atlassian.jira-core-project-templates:jira-core-simplified-document-approval`, `com.atlassian.jira-core-project-templates:jira-core-simplified-lead-tracking`, `com.atlassian.jira-core-project-templates:jira-core-simplified-process-control`, `com.atlassian.jira-core-project-templates:jira-core-simplified-procurement`, `com.atlassian.jira-core-project-templates:jira-core-simplified-project-management`, `com.atlassian.jira-core-project-templates:jira-core-simplified-recruitment`, `com.atlassian.jira-core-project-templates:jira-core-simplified-task-tracking` |  
        /// | `service_desk` | `com.atlassian.servicedesk:simplified-it-service-management`, `com.atlassian.servicedesk:simplified-general-service-desk`, `com.atlassian.servicedesk:simplified-internal-service-desk`, `com.atlassian.servicedesk:simplified-external-service-desk`, `com.atlassian.servicedesk:simplified-hr-service-desk`, `com.atlassian.servicedesk:simplified-facilities-service-desk`, `com.atlassian.servicedesk:simplified-legal-service-desk` |  
        /// | `software` | `com.pyxis.greenhopper.jira:gh-simplified-agility-kanban`, `com.pyxis.greenhopper.jira:gh-simplified-agility-scrum`, `com.pyxis.greenhopper.jira:gh-simplified-basic`, `com.pyxis.greenhopper.jira:gh-simplified-kanban-classic`, `com.pyxis.greenhopper.jira:gh-simplified-scrum-classic` |  
        /// The project types are available according to the installed Jira features as follows:
        /// 
        ///  *  Jira Core, the default, enables `business` projects.
        ///  *  Jira Service Management enables `service_desk` projects.
        ///  *  Jira Software enables `software` projects.
        /// 
        /// To determine which features are installed, go to **Jira settings** > **Apps** > **Manage apps** and review the System Apps list. To add Jira Software or Jira Service Management into a JIRA instance, use **Jira settings** > **Apps** > **Finding new apps**. For more information, see [ Managing add-ons](https://confluence.atlassian.com/x/S31NLg).
        /// 
        /// **[Permissions](#permissions) required:** *Administer Jira* [global permission](https://confluence.atlassian.com/x/x4dKLg).
        public func post(_ body: JiraKit.CreateProjectDetails) -> Request<JiraKit.ProjectIdentifiers> {
            Request(method: "POST", url: path, body: body, id: "createProject")
        }
    }
}
