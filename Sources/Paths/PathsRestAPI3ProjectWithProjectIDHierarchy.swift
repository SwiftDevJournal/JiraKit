// Generated by Create API
// https://github.com/CreateAPI/CreateAPI

import Foundation
import Get
import URLQueryEncoder

extension Paths.API.__3.Project.WithProjectID {
    public var hierarchy: Hierarchy {
        Hierarchy(path: path + "/hierarchy")
    }

    public struct Hierarchy {
        /// Path: `/rest/api/3/project/{projectId}/hierarchy`
        public let path: String

        /// Get project issue type hierarchy
        ///
        /// Get the issue type hierarchy for a next-gen project.
        /// 
        /// The issue type hierarchy for a project consists of:
        /// 
        ///  *  *Epic* at level 1 (optional).
        ///  *  One or more issue types at level 0 such as *Story*, *Task*, or *Bug*. Where the issue type *Epic* is defined, these issue types are used to break down the content of an epic.
        ///  *  *Subtask* at level -1 (optional). This issue type enables level 0 issue types to be broken down into components. Issues based on a level -1 issue type must have a parent issue.
        /// 
        /// **[Permissions](#permissions) required:** *Browse projects* [project permission](https://confluence.atlassian.com/x/yodKLg) for the project.
        @available(*, deprecated, message: "Deprecated")
        public var get: Request<JiraKit.ProjectIssueTypeHierarchy> {
            Request(method: "GET", url: path, id: "getHierarchy")
        }
    }
}
