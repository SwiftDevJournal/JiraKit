// Generated by Create API
// https://github.com/CreateAPI/CreateAPI

import Foundation
import Get
import URLQueryEncoder

extension Paths.API.__3.Role.WithID {
    public var actors: Actors {
        Actors(path: path + "/actors")
    }

    public struct Actors {
        /// Path: `/rest/api/3/role/{id}/actors`
        public let path: String

        /// Get default actors for project role
        ///
        /// Returns the [default actors](#api-rest-api-3-resolution-get) for the project role.
        /// 
        /// **[Permissions](#permissions) required:** *Administer Jira* [global permission](https://confluence.atlassian.com/x/x4dKLg).
        public var get: Request<JiraKit.ProjectRole> {
            Request(path: path, method: "GET", id: "getProjectRoleActorsForRole")
        }

        /// Add default actors to project role
        ///
        /// Adds [default actors](#api-rest-api-3-resolution-get) to a role. You may add groups or users, but you cannot add groups and users in the same request.
        /// 
        /// Changing a project role's default actors does not affect project role members for projects already created.
        /// 
        /// **[Permissions](#permissions) required:** *Administer Jira* [global permission](https://confluence.atlassian.com/x/x4dKLg).
        public func post(_ body: JiraKit.ActorInputBean) -> Request<JiraKit.ProjectRole> {
            Request(path: path, method: "POST", body: body, id: "addProjectRoleActorsToRole")
        }

        /// Delete default actors from project role
        ///
        /// Deletes the [default actors](#api-rest-api-3-resolution-get) from a project role. You may delete a group or user, but you cannot delete a group and a user in the same request.
        /// 
        /// Changing a project role's default actors does not affect project role members for projects already created.
        /// 
        /// **[Permissions](#permissions) required:** *Administer Jira* [global permission](https://confluence.atlassian.com/x/x4dKLg).
        public func delete(parameters: DeleteParameters? = nil) -> Request<JiraKit.ProjectRole> {
            Request(path: path, method: "DELETE", query: parameters?.asQuery, id: "deleteProjectRoleActorsFromRole")
        }

        public struct DeleteParameters {
            /// Example: "5b10ac8d82e05b22cc7d4ef5"
            public var user: String?
            public var groupID: String?
            public var group: String?

            public init(user: String? = nil, groupID: String? = nil, group: String? = nil) {
                self.user = user
                self.groupID = groupID
                self.group = group
            }

            public var asQuery: [(String, String?)] {
                let encoder = URLQueryEncoder()
                encoder.encode(user, forKey: "user")
                encoder.encode(groupID, forKey: "groupId")
                encoder.encode(group, forKey: "group")
                return encoder.items
            }
        }
    }
}
