// Generated by Create API
// https://github.com/CreateAPI/CreateAPI

import Foundation
import Get
import URLQueryEncoder

extension Paths.API.__3.Screens.WithScreenID {
    public var tabs: Tabs {
        Tabs(path: path + "/tabs")
    }

    public struct Tabs {
        /// Path: `/rest/api/3/screens/{screenId}/tabs`
        public let path: String

        /// Get all screen tabs
        ///
        /// Returns the list of tabs for a screen.
        /// 
        /// **[Permissions](#permissions) required:**
        /// 
        ///  *  *Administer Jira* [global permission](https://confluence.atlassian.com/x/x4dKLg).
        ///  *  *Administer projects* [project permission](https://confluence.atlassian.com/x/yodKLg) when the project key is specified, providing that the screen is associated with the project through a Screen Scheme and Issue Type Screen Scheme.
        public func get(projectKey: String? = nil) -> Request<[JiraKit.ScreenableTab]> {
            Request(method: "GET", url: path, query: makeGetQuery(projectKey), id: "getAllScreenTabs")
        }

        private func makeGetQuery(_ projectKey: String?) -> [(String, String?)] {
            let encoder = URLQueryEncoder()
            encoder.encode(projectKey, forKey: "projectKey")
            return encoder.items
        }

        /// Create screen tab
        ///
        /// Creates a tab for a screen.
        /// 
        /// **[Permissions](#permissions) required:** *Administer Jira* [global permission](https://confluence.atlassian.com/x/x4dKLg).
        public func post(_ body: JiraKit.ScreenableTab) -> Request<JiraKit.ScreenableTab> {
            Request(method: "POST", url: path, body: body, id: "addScreenTab")
        }
    }
}
