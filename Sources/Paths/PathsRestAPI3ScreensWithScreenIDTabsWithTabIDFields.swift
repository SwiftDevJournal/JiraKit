// Generated by Create API
// https://github.com/CreateAPI/CreateAPI

import Foundation
import Get
import URLQueryEncoder

extension Paths.API.__3.Screens.WithScreenID.Tabs.WithTabID {
    public var fields: Fields {
        Fields(path: path + "/fields")
    }

    public struct Fields {
        /// Path: `/rest/api/3/screens/{screenId}/tabs/{tabId}/fields`
        public let path: String

        /// Get all screen tab fields
        ///
        /// Returns all fields for a screen tab.
        /// 
        /// **[Permissions](#permissions) required:**
        /// 
        ///  *  *Administer Jira* [global permission](https://confluence.atlassian.com/x/x4dKLg).
        ///  *  *Administer projects* [project permission](https://confluence.atlassian.com/x/yodKLg) when the project key is specified, providing that the screen is associated with the project through a Screen Scheme and Issue Type Screen Scheme.
        public func get(projectKey: String? = nil) -> Request<[JiraKit.ScreenableField]> {
            Request(path: path, method: "GET", query: makeGetQuery(projectKey), id: "getAllScreenTabFields")
        }

        private func makeGetQuery(_ projectKey: String?) -> [(String, String?)] {
            let encoder = URLQueryEncoder()
            encoder.encode(projectKey, forKey: "projectKey")
            return encoder.items
        }

        /// Add screen tab field
        ///
        /// Adds a field to a screen tab.
        /// 
        /// **[Permissions](#permissions) required:** *Administer Jira* [global permission](https://confluence.atlassian.com/x/x4dKLg).
        public func post(_ body: JiraKit.AddFieldBean) -> Request<JiraKit.ScreenableField> {
            Request(path: path, method: "POST", body: body, id: "addScreenTabField")
        }
    }
}
