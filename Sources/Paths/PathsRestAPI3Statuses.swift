// Generated by Create API
// https://github.com/CreateAPI/CreateAPI

import Foundation
import Get
import URLQueryEncoder

extension Paths.API.__3 {
    public var statuses: Statuses {
        Statuses(path: path + "/statuses")
    }

    public struct Statuses {
        /// Path: `/rest/api/3/statuses`
        public let path: String

        /// Bulk get statuses
        ///
        /// Returns a list of the statuses specified by one or more status IDs.
        /// 
        /// **[Permissions](#permissions) required:**
        /// 
        ///  *  *Administer projects* [project permission.](https://confluence.atlassian.com/x/yodKLg)
        ///  *  *Administer Jira* [project permission.](https://confluence.atlassian.com/x/yodKLg)
        public func get(expand: String? = nil, id: [String]? = nil) -> Request<[JiraKit.JiraStatus]> {
            Request(path: path, method: "GET", query: makeGetQuery(expand, id), id: "getStatusesById")
        }

        private func makeGetQuery(_ expand: String?, _ id: [String]?) -> [(String, String?)] {
            let encoder = URLQueryEncoder()
            encoder.encode(expand, forKey: "expand")
            encoder.encode(id, forKey: "id")
            return encoder.items
        }

        /// Bulk create statuses
        ///
        /// Creates statuses for a global or project scope.
        /// 
        /// **[Permissions](#permissions) required:**
        /// 
        ///  *  *Administer projects* [project permission.](https://confluence.atlassian.com/x/yodKLg)
        ///  *  *Administer Jira* [project permission.](https://confluence.atlassian.com/x/yodKLg)
        public func post(_ body: JiraKit.StatusCreateRequest) -> Request<[JiraKit.JiraStatus]> {
            Request(path: path, method: "POST", body: body, id: "createStatuses")
        }

        /// Bulk update statuses
        ///
        /// Updates statuses by ID.
        /// 
        /// **[Permissions](#permissions) required:**
        /// 
        ///  *  *Administer projects* [project permission.](https://confluence.atlassian.com/x/yodKLg)
        ///  *  *Administer Jira* [project permission.](https://confluence.atlassian.com/x/yodKLg)
        public func put(_ body: JiraKit.StatusUpdateRequest) -> Request<AnyJSON> {
            Request(path: path, method: "PUT", body: body, id: "updateStatuses")
        }

        /// Bulk delete Statuses
        ///
        /// Deletes statuses by ID.
        /// 
        /// **[Permissions](#permissions) required:**
        /// 
        ///  *  *Administer projects* [project permission.](https://confluence.atlassian.com/x/yodKLg)
        ///  *  *Administer Jira* [project permission.](https://confluence.atlassian.com/x/yodKLg)
        public func delete(id: [String]? = nil) -> Request<AnyJSON> {
            Request(path: path, method: "DELETE", query: makeDeleteQuery(id), id: "deleteStatusesById")
        }

        private func makeDeleteQuery(_ id: [String]?) -> [(String, String?)] {
            let encoder = URLQueryEncoder()
            encoder.encode(id, forKey: "id")
            return encoder.items
        }
    }
}
