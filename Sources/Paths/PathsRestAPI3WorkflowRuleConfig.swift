// Generated by Create API
// https://github.com/CreateAPI/CreateAPI

import Foundation
import Get
import URLQueryEncoder

extension Paths.API.__3.Workflow.Rule {
    public var config: Config {
        Config(path: path + "/config")
    }

    public struct Config {
        /// Path: `/rest/api/3/workflow/rule/config`
        public let path: String

        /// Get workflow transition rule configurations
        ///
        /// Returns a [paginated](#pagination) list of workflows with transition rules. The workflows can be filtered to return only those containing workflow transition rules:
        /// 
        ///  *  of one or more transition rule types, such as [workflow post functions](https://developer.atlassian.com/cloud/jira/platform/modules/workflow-post-function/).
        ///  *  matching one or more transition rule keys.
        /// 
        /// Only workflows containing transition rules created by the calling Connect app are returned. However, if a workflow is returned all transition rules that match the filters are returned for that workflow.
        /// 
        /// Due to server-side optimizations, workflows with an empty list of rules may be returned; these workflows can be ignored.
        /// 
        /// **[Permissions](#permissions) required:** Only Connect apps can use this operation.
        public func get(parameters: GetParameters) -> Request<JiraKit.PageBeanWorkflowTransitionRules> {
            Request(method: "GET", url: path, query: parameters.asQuery, id: "getWorkflowTransitionRuleConfigurations")
        }

        public struct GetParameters {
            public var startAt: Int64?
            public var maxResults: Int32?
            public var types: [Types]
            public var keys: [String]?
            public var workflowNames: [String]?
            public var withTags: [String]?
            public var isDraft: Bool?
            public var expand: String?

            public enum Types: String, Codable, CaseIterable {
                case postfunction
                case condition
                case validator
            }

            public init(startAt: Int64? = nil, maxResults: Int32? = nil, types: [Types], keys: [String]? = nil, workflowNames: [String]? = nil, withTags: [String]? = nil, isDraft: Bool? = nil, expand: String? = nil) {
                self.startAt = startAt
                self.maxResults = maxResults
                self.types = types
                self.keys = keys
                self.workflowNames = workflowNames
                self.withTags = withTags
                self.isDraft = isDraft
                self.expand = expand
            }

            public var asQuery: [(String, String?)] {
                let encoder = URLQueryEncoder()
                encoder.encode(startAt, forKey: "startAt")
                encoder.encode(maxResults, forKey: "maxResults")
                encoder.encode(types, forKey: "types")
                encoder.encode(keys, forKey: "keys")
                encoder.encode(workflowNames, forKey: "workflowNames")
                encoder.encode(withTags, forKey: "withTags")
                encoder.encode(isDraft, forKey: "draft")
                encoder.encode(expand, forKey: "expand")
                return encoder.items
            }
        }

        /// Update workflow transition rule configurations
        ///
        /// Updates configuration of workflow transition rules. The following rule types are supported:
        /// 
        ///  *  [post functions](https://developer.atlassian.com/cloud/jira/platform/modules/workflow-post-function/)
        ///  *  [conditions](https://developer.atlassian.com/cloud/jira/platform/modules/workflow-condition/)
        ///  *  [validators](https://developer.atlassian.com/cloud/jira/platform/modules/workflow-validator/)
        /// 
        /// Only rules created by the calling Connect app can be updated.
        /// 
        /// To assist with app migration, this operation can be used to:
        /// 
        ///  *  Disable a rule.
        ///  *  Add a `tag`. Use this to filter rules in the [Get workflow transition rule configurations](https://developer.atlassian.com/cloud/jira/platform/rest/v3/api-group-workflow-transition-rules/#api-rest-api-3-workflow-rule-config-get).
        /// 
        /// Rules are enabled if the `disabled` parameter is not provided.
        /// 
        /// **[Permissions](#permissions) required:** Only Connect apps can use this operation.
        public func put(_ body: JiraKit.WorkflowTransitionRulesUpdate) -> Request<JiraKit.WorkflowTransitionRulesUpdateErrors> {
            Request(method: "PUT", url: path, body: body, id: "updateWorkflowTransitionRuleConfigurations")
        }
    }
}
