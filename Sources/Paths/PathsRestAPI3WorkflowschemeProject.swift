// Generated by Create API
// https://github.com/CreateAPI/CreateAPI

import Foundation
import Get
import URLQueryEncoder

extension Paths.API.__3.Workflowscheme {
    public var project: Project {
        Project(path: path + "/project")
    }

    public struct Project {
        /// Path: `/rest/api/3/workflowscheme/project`
        public let path: String

        /// Get workflow scheme project associations
        ///
        /// Returns a list of the workflow schemes associated with a list of projects. Each returned workflow scheme includes a list of the requested projects associated with it. Any team-managed or non-existent projects in the request are ignored and no errors are returned.
        /// 
        /// If the project is associated with the `Default Workflow Scheme` no ID is returned. This is because the way the `Default Workflow Scheme` is stored means it has no ID.
        /// 
        /// **[Permissions](#permissions) required:** *Administer Jira* [global permission](https://confluence.atlassian.com/x/x4dKLg).
        public func get(projectID: [Int]) -> Request<JiraKit.ContainerOfWorkflowSchemeAssociations> {
            Request(method: "GET", url: path, query: makeGetQuery(projectID), id: "getWorkflowSchemeProjectAssociations")
        }

        private func makeGetQuery(_ projectID: [Int]) -> [(String, String?)] {
            let encoder = URLQueryEncoder()
            encoder.encode(projectID, forKey: "projectId")
            return encoder.items
        }

        /// Assign workflow scheme to project
        ///
        /// Assigns a workflow scheme to a project. This operation is performed only when there are no issues in the project.
        /// 
        /// Workflow schemes can only be assigned to classic projects.
        /// 
        /// **[Permissions](#permissions) required:** *Administer Jira* [global permission](https://confluence.atlassian.com/x/x4dKLg).
        public func put(_ body: JiraKit.WorkflowSchemeProjectAssociation) -> Request<AnyJSON> {
            Request(method: "PUT", url: path, body: body, id: "assignSchemeToProject")
        }
    }
}
