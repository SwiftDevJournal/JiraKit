// Generated by Create API
// https://github.com/CreateAPI/CreateAPI

import Foundation
import Get
import URLQueryEncoder

extension Paths.API.__3.Workflowscheme {
    public func id(_ id: Int) -> WithID {
        WithID(path: "\(path)/\(id)")
    }

    public struct WithID {
        /// Path: `/rest/api/3/workflowscheme/{id}`
        public let path: String

        /// Get workflow scheme
        ///
        /// Returns a workflow scheme.
        /// 
        /// **[Permissions](#permissions) required:** *Administer Jira* [global permission](https://confluence.atlassian.com/x/x4dKLg).
        public func get(isReturnDraftIfExists: Bool? = nil) -> Request<JiraKit.WorkflowScheme> {
            Request(method: "GET", url: path, query: makeGetQuery(isReturnDraftIfExists), id: "getWorkflowScheme")
        }

        private func makeGetQuery(_ isReturnDraftIfExists: Bool?) -> [(String, String?)] {
            let encoder = URLQueryEncoder()
            encoder.encode(isReturnDraftIfExists, forKey: "returnDraftIfExists")
            return encoder.items
        }

        /// Update workflow scheme
        ///
        /// Updates a workflow scheme, including the name, default workflow, issue type to project mappings, and more. If the workflow scheme is active (that is, being used by at least one project), then a draft workflow scheme is created or updated instead, provided that `updateDraftIfNeeded` is set to `true`.
        /// 
        /// **[Permissions](#permissions) required:** *Administer Jira* [global permission](https://confluence.atlassian.com/x/x4dKLg).
        public func put(_ body: JiraKit.WorkflowScheme) -> Request<JiraKit.WorkflowScheme> {
            Request(method: "PUT", url: path, body: body, id: "updateWorkflowScheme")
        }

        /// Delete workflow scheme
        ///
        /// Deletes a workflow scheme. Note that a workflow scheme cannot be deleted if it is active (that is, being used by at least one project).
        /// 
        /// **[Permissions](#permissions) required:** *Administer Jira* [global permission](https://confluence.atlassian.com/x/x4dKLg).
        public var delete: Request<AnyJSON> {
            Request(method: "DELETE", url: path, id: "deleteWorkflowScheme")
        }
    }
}
