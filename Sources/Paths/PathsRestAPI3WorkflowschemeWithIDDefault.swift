// Generated by Create API
// https://github.com/CreateAPI/CreateAPI

import Foundation
import Get
import URLQueryEncoder

extension Paths.API.__3.Workflowscheme.WithID {
    public var `default`: Default {
        Default(path: path + "/default")
    }

    public struct Default {
        /// Path: `/rest/api/3/workflowscheme/{id}/default`
        public let path: String

        /// Get default workflow
        ///
        /// Returns the default workflow for a workflow scheme. The default workflow is the workflow that is assigned any issue types that have not been mapped to any other workflow. The default workflow has *All Unassigned Issue Types* listed in its issue types for the workflow scheme in Jira.
        /// 
        /// **[Permissions](#permissions) required:** *Administer Jira* [global permission](https://confluence.atlassian.com/x/x4dKLg).
        public func get(isReturnDraftIfExists: Bool? = nil) -> Request<JiraKit.DefaultWorkflow> {
            Request(path: path, method: "GET", query: makeGetQuery(isReturnDraftIfExists), id: "getDefaultWorkflow")
        }

        private func makeGetQuery(_ isReturnDraftIfExists: Bool?) -> [(String, String?)] {
            let encoder = URLQueryEncoder()
            encoder.encode(isReturnDraftIfExists, forKey: "returnDraftIfExists")
            return encoder.items
        }

        /// Update default workflow
        ///
        /// Sets the default workflow for a workflow scheme.
        /// 
        /// Note that active workflow schemes cannot be edited. If the workflow scheme is active, set `updateDraftIfNeeded` to `true` in the request object and a draft workflow scheme is created or updated with the new default workflow. The draft workflow scheme can be published in Jira.
        /// 
        /// **[Permissions](#permissions) required:** *Administer Jira* [global permission](https://confluence.atlassian.com/x/x4dKLg).
        public func put(_ body: JiraKit.DefaultWorkflow) -> Request<JiraKit.WorkflowScheme> {
            Request(path: path, method: "PUT", body: body, id: "updateDefaultWorkflow")
        }

        /// Delete default workflow
        ///
        /// Resets the default workflow for a workflow scheme. That is, the default workflow is set to Jira's system workflow (the *jira* workflow).
        /// 
        /// Note that active workflow schemes cannot be edited. If the workflow scheme is active, set `updateDraftIfNeeded` to `true` and a draft workflow scheme is created or updated with the default workflow reset. The draft workflow scheme can be published in Jira.
        /// 
        /// **[Permissions](#permissions) required:** *Administer Jira* [global permission](https://confluence.atlassian.com/x/x4dKLg).
        public func delete(isUpdateDraftIfNeeded: Bool? = nil) -> Request<JiraKit.WorkflowScheme> {
            Request(path: path, method: "DELETE", query: makeDeleteQuery(isUpdateDraftIfNeeded), id: "deleteDefaultWorkflow")
        }

        private func makeDeleteQuery(_ isUpdateDraftIfNeeded: Bool?) -> [(String, String?)] {
            let encoder = URLQueryEncoder()
            encoder.encode(isUpdateDraftIfNeeded, forKey: "updateDraftIfNeeded")
            return encoder.items
        }
    }
}
