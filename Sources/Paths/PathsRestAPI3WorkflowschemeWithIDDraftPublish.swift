// Generated by Create API
// https://github.com/CreateAPI/CreateAPI

import Foundation
import Get
import URLQueryEncoder

extension Paths.API.__3.Workflowscheme.WithID.Draft {
    public var publish: Publish {
        Publish(path: path + "/publish")
    }

    public struct Publish {
        /// Path: `/rest/api/3/workflowscheme/{id}/draft/publish`
        public let path: String

        /// Publish draft workflow scheme
        ///
        /// Publishes a draft workflow scheme.
        /// 
        /// Where the draft workflow includes new workflow statuses for an issue type, mappings are provided to update issues with the original workflow status to the new workflow status.
        /// 
        /// This operation is [asynchronous](#async). Follow the `location` link in the response to determine the status of the task and use [Get task](#api-rest-api-3-task-taskId-get) to obtain updates.
        /// 
        /// **[Permissions](#permissions) required:** *Administer Jira* [global permission](https://confluence.atlassian.com/x/x4dKLg).
        public func post(isValidateOnly: Bool? = nil, _ body: JiraKit.PublishDraftWorkflowScheme) -> Request<Void> {
            Request(path: path, method: "POST", query: makePostQuery(isValidateOnly), body: body, id: "publishDraftWorkflowScheme")
        }

        private func makePostQuery(_ isValidateOnly: Bool?) -> [(String, String?)] {
            let encoder = URLQueryEncoder()
            encoder.encode(isValidateOnly, forKey: "validateOnly")
            return encoder.items
        }
    }
}
