// Generated by Create API
// https://github.com/CreateAPI/CreateAPI

import Foundation
import Get
import URLQueryEncoder

extension Paths.API.__3.Workflowscheme.WithID.Issuetype {
    public func issueType(_ issueType: String) -> WithIssueType {
        WithIssueType(path: "\(path)/\(issueType)")
    }

    public struct WithIssueType {
        /// Path: `/rest/api/3/workflowscheme/{id}/issuetype/{issueType}`
        public let path: String

        /// Get workflow for issue type in workflow scheme
        ///
        /// Returns the issue type-workflow mapping for an issue type in a workflow scheme.
        /// 
        /// **[Permissions](#permissions) required:** *Administer Jira* [global permission](https://confluence.atlassian.com/x/x4dKLg).
        public func get(isReturnDraftIfExists: Bool? = nil) -> Request<JiraKit.IssueTypeWorkflowMapping> {
            Request(path: path, method: "GET", query: makeGetQuery(isReturnDraftIfExists), id: "getWorkflowSchemeIssueType")
        }

        private func makeGetQuery(_ isReturnDraftIfExists: Bool?) -> [(String, String?)] {
            let encoder = URLQueryEncoder()
            encoder.encode(isReturnDraftIfExists, forKey: "returnDraftIfExists")
            return encoder.items
        }

        /// Set workflow for issue type in workflow scheme
        ///
        /// Sets the workflow for an issue type in a workflow scheme.
        /// 
        /// Note that active workflow schemes cannot be edited. If the workflow scheme is active, set `updateDraftIfNeeded` to `true` in the request body and a draft workflow scheme is created or updated with the new issue type-workflow mapping. The draft workflow scheme can be published in Jira.
        /// 
        /// **[Permissions](#permissions) required:** *Administer Jira* [global permission](https://confluence.atlassian.com/x/x4dKLg).
        public func put(_ body: JiraKit.IssueTypeWorkflowMapping) -> Request<JiraKit.WorkflowScheme> {
            Request(path: path, method: "PUT", body: body, id: "setWorkflowSchemeIssueType")
        }

        /// Delete workflow for issue type in workflow scheme
        ///
        /// Deletes the issue type-workflow mapping for an issue type in a workflow scheme.
        /// 
        /// Note that active workflow schemes cannot be edited. If the workflow scheme is active, set `updateDraftIfNeeded` to `true` and a draft workflow scheme is created or updated with the issue type-workflow mapping deleted. The draft workflow scheme can be published in Jira.
        /// 
        /// **[Permissions](#permissions) required:** *Administer Jira* [global permission](https://confluence.atlassian.com/x/x4dKLg).
        public func delete(isUpdateDraftIfNeeded: Bool? = nil) -> Request<JiraKit.WorkflowScheme> {
            Request(path: path, method: "DELETE", query: makeDeleteQuery(isUpdateDraftIfNeeded), id: "deleteWorkflowSchemeIssueType")
        }

        private func makeDeleteQuery(_ isUpdateDraftIfNeeded: Bool?) -> [(String, String?)] {
            let encoder = URLQueryEncoder()
            encoder.encode(isUpdateDraftIfNeeded, forKey: "updateDraftIfNeeded")
            return encoder.items
        }
    }
}
